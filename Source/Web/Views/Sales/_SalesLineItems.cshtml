@model Web.Models.ViewModels.Sales.SalesHeaderViewModel
@using Web.Models;
<script type="text/javascript">
    function validateNewLineItem() {
        var SalesLineItemViewModel = new Object();
        SalesLineItemViewModel.ItemNo = $('#txtItemNo').val();
        SalesLineItemViewModel.Quantity = $('#Quantity').val();
        SalesLineItemViewModel.Price = $('#Price').val();
        SalesLineItemViewModel.Discount = $('#Discount').val();
    }

    function onChangedItem(_this) {
        var ddl = document.getElementById('ddlItemNo');
        $('#Quantity').val("1");
        if ($(_this).attr('id') == 'txtItemNo') {
            var opts = ddl.options.length;
            for (var i = 0; i < opts; i++) {
                if (ddl.options[i].value == $('#txtItemNo').val()) {
                    ddl.options[i].selected = true;
                    break;
                }
            }
        }
        else if ($(_this).attr('id') == 'ddlItemNo') {
            var itemNo = ddl.options[ddl.selectedIndex].value;
            if (itemNo != "-1")
                $('#txtItemNo').val(itemNo);
            else
                $('#txtItemNo').val("");
        }

        var _itemNo = ddl.options[ddl.selectedIndex].value;
        var url = '/Inventory/GetItemByNo';
        /*GET*/
        $.ajax({
            url: url,
            dataType: "json",
            type: "GET",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            data: { itemNo: _itemNo },
            async: true,
            processData: true,
            cache: false,
            success: function (d) {
                $('#Price').val(d.Price);
                setLineTotal();
            },
            error: function (xhr) {
                alert('error');
            }
        });
    }

    function onChangedQuantity() {
        var ddl = document.getElementById('ddlItemNo');
        var _itemNo = ddl.options[ddl.selectedIndex].value;
        var url = '/Inventory/GetItemByNo';
        /*GET*/
        $.ajax({
            url: url,
            dataType: "json",
            type: "GET",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            data: { itemNo: _itemNo },
            async: true,
            processData: true,
            cache: false,
            success: function (d) {
                setLineTotal();

            },
            error: function (xhr) {
                alert('error');
            }
        });
    }

    function setLineTotal() {
        var qty = $('#Quantity').val();
        var price = $('#Price').val();
        var discount = $('#Discount').val();
        var discountAmount = (price * qty) * (discount / 100);
        document.getElementById("lblLineTotal").innerHTML = (price * qty) - discountAmount;
    }
</script>
<script type="text/javascript">
    function deleteLineItem(_this) {
        var id = $(_this).attr('id');
        $('input[name="DeletedLineItem"]').val(id);
    }
</script>
<h2>@ViewBag.Transaction Items</h2>
<input type="hidden" value="" name="DeletedLineItem" />
<div class="panel panel-default">
    <div class="panel-body table-responsive">
        <table class="table table-bordered table-condensed f11">
            <thead>
                <tr>
                    <th>Item No</th>
                    <th>Item Description</th>
                    <th>Measurement</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Discount %</th>
                    <th>Total</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Html.TextBoxFor(m => m.SalesLine.ItemNo, new { @onchange = "onChangedItem(this)", @id = "txtItemNo", @style = "width: 100px;" })</td>
                    <td>@Html.DropDownListFor(m => m.SalesLine.ItemNo, ModelViewHelper.Items(), new { @onchange = "onChangedItem(this)", @id = "ddlItemNo" }) </td>
                    <td>
                        <label id="lblMeasurement" />
                    </td>
                    <td>@Html.TextBoxFor(m => m.SalesLine.Quantity, new { @onchange = "onChangedQuantity()", @id = "Quantity", @style = "width: 100px;" })</td>
                    <td>@Html.TextBoxFor(m => m.SalesLine.Price, new { @id = "Price", @style = "width: 100px;" })</td>
                    <td>@Html.TextBoxFor(m => m.SalesLine.Discount, new { @id = "Discount", @style = "width: 100px;" })</td>
                    <td>
                        <label id="lblLineTotal" />
                    </td>
                    <td>
                        <input type="submit" value="Add Item" name="AddLineItem" onclick="return validateNewLineItem();" /></td>
                </tr>
                @for (int i = 0; i < Model.SalesLine.SalesLineItems.Count; i++)
                {
                    @Html.HiddenFor(m => Model.SalesLine.SalesLineItems[i].Id)
                    @Html.HiddenFor(m => Model.SalesLine.SalesLineItems[i].ItemId)
                    @Html.HiddenFor(m => Model.SalesLine.SalesLineItems[i].CustomerId)
                    @Html.HiddenFor(m => Model.SalesLine.SalesLineItems[i].ItemNo)
                    @Html.HiddenFor(m => Model.SalesLine.SalesLineItems[i].ItemDescription)
                    @Html.HiddenFor(m => Model.SalesLine.SalesLineItems[i].Measurement)
                    @Html.HiddenFor(m => Model.SalesLine.SalesLineItems[i].Quantity)
                    @Html.HiddenFor(m => Model.SalesLine.SalesLineItems[i].Price)
                    @Html.HiddenFor(m => Model.SalesLine.SalesLineItems[i].Discount)
                    @Html.HiddenFor(m => Model.SalesLine.SalesLineItems[i].Total)
                    <tr>
                        <td>@Model.SalesLine.SalesLineItems[i].ItemNo</td>
                        <td>@Model.SalesLine.SalesLineItems[i].ItemDescription</td>
                        <td>@Model.SalesLine.SalesLineItems[i].Measurement</td>
                        <td>@Model.SalesLine.SalesLineItems[i].Quantity</td>
                        <td>@Model.SalesLine.SalesLineItems[i].Price</td>
                        <td>@Model.SalesLine.SalesLineItems[i].Discount</td>
                        <td>@Model.SalesLine.SalesLineItems[i].Total</td>
                        <td>
                            <input type="submit" value="Delete" name="DeleteLineItem" onclick="deleteLineItem(this)" id="@i" />
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot style="text-align: right;">
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Shipping Charges</td>
                    <td colspan="2">@Html.TextBoxFor(m => m.ShippingHandlingCharges, new { @style = "width: 100px; text-align: right; " })</td>
                    @*<td></td>*@
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Sub-Total</td>
                    <td colspan="2">@Html.DisplayFor(m => m.SalesLine.SubTotal)</td>
                    @*<td></td>*@
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Tax</td>
                    <td colspan="2">@Model.SalesLine.ComputeAmountTax()@*@Html.DisplayFor(m => m.SalesLine.AmountTax)*@</td>
                    @*<td></td>*@
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Amount Total</td>
                    <td colspan="2">
                        @{                            
                            var amountTotal = Model.SalesLine.SubTotal;
                        }
                        @amountTotal
                    </td>
                    @*<td></td>*@
                </tr>
                @Html.HiddenFor(m => m.SalesLine.AmountTotal, new { @Value = Model.SalesLine.AmountTotal })
                @Html.HiddenFor(m => m.SalesLine.AmountTax, new { @Value = Model.SalesLine.AmountTax })

            </tfoot>
        </table>
    </div>
</div>

