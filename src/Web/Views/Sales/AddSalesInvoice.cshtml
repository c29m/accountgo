@model Web.Models.ViewModels.Sales.AddSalesInvoice
@using Web.Models;
@{
    ViewBag.Title = "AddSalesInvoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Sales Invoice</h2>

@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.SalesOrderId)
    <div>
        <div class="form-group">
            @Html.LabelFor(m => m.CustomerId, new { @class = "col-md-2 control-label" })
            @Html.DropDownListFor(m => m.CustomerId, ModelViewHelper.Customers())
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Date, new { @class = "col-md-2 control-label" })
            @Html.EditorFor(m => m.Date)
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th class="col-md-3">Item Code</th>
                <th class="col-md-3">Unit</th>
                <th class="col-md-3">Price</th>
                <th class="col-md-3">Quantity</th>
                <th class="col-md-3">Discount</th>
                <th class="col-md-3"></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Html.DropDownListFor(m => m.ItemId, Model.Items)</td>
                <td>@Html.DropDownListFor(m => m.MeasurementId, Model.Measurements)</td>
                <td></td>
                <td>@Html.TextBoxFor(m => m.Quantity)</td>
                <td>@Html.TextBoxFor(m => m.Discount, new { @disabled = "disabled" })</td>
                <td>
                    <input type="submit" value="Add Item" name="AddSalesInvoiceLine" />
                </td>
            </tr>
            @if (Model != null)
            {
                for (int i = 0; i < Model.AddSalesInvoiceLines.Count; i++)
                {
                    @Html.HiddenFor(x => Model.AddSalesInvoiceLines[i].Amount)
                    <tr>
                        <td>
                            @Html.DisplayFor(x => Model.AddSalesInvoiceLines[i].ItemId)
                            @Html.HiddenFor(x => Model.AddSalesInvoiceLines[i].ItemId)
                        </td>
                        <td>
                            @Html.DisplayFor(x => Model.AddSalesInvoiceLines[i].MeasurementId)
                            @Html.HiddenFor(x => Model.AddSalesInvoiceLines[i].MeasurementId)
                        </td>
                        <td>
                            @Html.DisplayFor(x => Model.AddSalesInvoiceLines[i].Price)
                            @Html.HiddenFor(x => Model.AddSalesInvoiceLines[i].Price)
                        </td>
                        <td>
                            @Html.DisplayFor(x => Model.AddSalesInvoiceLines[i].Quantity)
                            @Html.HiddenFor(x => Model.AddSalesInvoiceLines[i].Quantity)
                        </td>
                        <td>
                            @Html.DisplayFor(x => Model.AddSalesInvoiceLines[i].Discount)
                            @Html.HiddenFor(x => Model.AddSalesInvoiceLines[i].Discount)
                        </td>
                        <td>
                            <input type="submit" value="Delete" name="DeleteInvoiceLineItem" id="@Model.AddSalesInvoiceLines[i].ItemId" onclick="return DeleteLineItem($(this).attr('id'));" />
                        </td>
                    </tr>
                }
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="5" style="text-align: right;">Total Amount: @Model.AddSalesInvoiceLines.Sum(m => m.Amount)</td>
                <td></td>
            </tr>
        </tfoot>
    </table>
    <input type="hidden" value="" name="DeletedLineItem" />
    <div>
        <input type="submit" value="Save" name="SaveSalesInvoice" />
    </div>
}
<script type="text/javascript">
    function DeleteLineItem(id) {
        $('input[name="DeletedLineItem"]').val(id);
    }
</script>