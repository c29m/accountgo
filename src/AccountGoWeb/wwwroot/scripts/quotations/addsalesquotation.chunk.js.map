{"version":3,"sources":["webpack:///./wwwroot/libs/tsxbuild/quotations/addsalesquotation.js","webpack:///./~/mobx-react/index.js?d8f8*","webpack:///./~/mobx/lib/mobx.js?6a62*","webpack:///./wwwroot/libs/tsxbuild/Shared/Components/SelectPaymentTerm.js?a8bb*","webpack:///./wwwroot/libs/tsxbuild/Shared/Components/SelectLineItem.js?c3fb*","webpack:///./wwwroot/libs/tsxbuild/Shared/Components/SelectLineMeasurement.js?50e2*","webpack:///./wwwroot/libs/tsxbuild/Shared/Components/SelectCustomer.js","webpack:///./wwwroot/libs/tsxbuild/Shared/Stores/Quotations/SalesQuotationStore.js","webpack:///./wwwroot/libs/tsxbuild/Shared/Stores/Quotations/SalesQuotation.js","webpack:///./wwwroot/libs/tsxbuild/Shared/Stores/Quotations/SalesQuotationLine.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,6CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,8EAA8E;AAC5H;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,gCAAgC;AAC9E;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oLAAmL,aAAa,4JAA4J,gHAAgH,yQAAyQ,aAAa;AACluB;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qDAAqD;AAC5E,uDAAsD,OAAO,iFAAiF,mFAAmF,+KAA+K,0FAA0F,6HAA6H,+HAA+H,kEAAkE,2HAA2H,kEAAkE,+HAA+H,uHAAuH,yFAAyF;AACpzC;AACA,spBAAqpB,wCAAwC,wIAAwI,+CAA+C,kEAAkE,mCAAmC,kEAAkE,iCAAiC,kEAAkE,mCAAmC,mGAAmG,wDAAwD,oGAAoG,aAAa;AAC76C;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA;AACA,8C;;;;;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;;AAEb;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,uBAAuB;AAClE;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,oCAAoC,EAAE;AACvF,kDAAiD,4DAA4D;AAC7G,kBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,EAAC;;;;;;;;;;;ACrOD;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzcAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iIAAgI,YAAY,EAAE;AAC9I;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,kCAAkC,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,EAAC;AACD;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,mCAAkC,qBAAqB;AACvD,oCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,iDAAiD,EAAE;AACpG;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,+CAA8C,8DAA8D,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,qBAAqB;AACvD,oCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yLAAwL;AACxL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,EAAC;AACD;AACA,EAAC;AACD;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,+BAA+B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,8BAA8B;AAC5D,2CAA0C,yBAAyB;AACnE,6CAA4C,2BAA2B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,iBAAiB,EAAE;AACtF,oEAAmE,iBAAiB,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,8BAA8B;AAC/B,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA,wCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,yDAAyD,EAAE;AACzH;AACA;AACA;AACA,+BAA8B,kCAAkC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,iBAAiB,EAAE;AACtF;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA,iCAAgC,UAAU,uBAAuB;AACjE;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA,8BAA6B,qBAAqB;AAClD,6BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,qBAAqB;AAClD,6BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,6BAA4B,eAAe;AAC3C;AACA;AACA,2CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,yBAAyB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,gCAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,yBAAyB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,eAAe;AAClD;AACA;AACA,gCAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,8BAA8B,EAAE;AAC/E;AACA;AACA;AACA,6CAA4C,oDAAoD,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA,sDAAqD,uCAAuC,EAAE;AAC9F;AACA,4DAA2D,mCAAmC,EAAE;AAChG,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,6CAA4C,kCAAkC,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,qCAAqC,6CAA6C,EAAE,kBAAkB;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,2BAA0B,4BAA4B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,yCAAyC;AACvE,oCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qDAAqD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,mDAAmD;AACnkBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,mEAAmE;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,kHAAiH,8BAA8B,EAAE;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,4BAA2B,aAAa;AACxC,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC54EA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,qBAAqB;AACzE,qDAAoD,qBAAqB;AACzE,qDAAoD,qBAAqB;AACzE;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA,8C;;;;;;;;;;ACxBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,qBAAqB;AACzE,qDAAoD,qBAAqB;AACzE,qDAAoD,qBAAqB;AACzE,gDAA+C,oGAAoG;AACnJ;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA,2C;;;;;;;;;;AC1BA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,qBAAqB;AACzE,qDAAoD,qBAAqB;AACzE,qDAAoD,qBAAqB;AACzE,gDAA+C,2GAA2G;AAC1J;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA,kD;;;;;;;;;;AC1BA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,qBAAqB;AACzE,qDAAoD,qBAAqB;AACzE,qDAAoD,qBAAqB;AACzE,gDAA+C,8DAA8D;AAC7G;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA,2C;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,oDAAoD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA,gD;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA,2C;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA,+C","file":"quotations/addsalesquotation.chunk.js","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar React = require(\"react\");\r\nvar ReactDOM = require(\"react-dom\");\r\nvar mobx_react_1 = require(\"mobx-react\");\r\nvar SelectCustomer_1 = require(\"../Shared/Components/SelectCustomer\");\r\nvar SelectPaymentTerm_1 = require(\"../Shared/Components/SelectPaymentTerm\");\r\nvar SelectLineItem_1 = require(\"../Shared/Components/SelectLineItem\");\r\nvar SelectLineMeasurement_1 = require(\"../Shared/Components/SelectLineMeasurement\");\r\nvar SalesQuotationStore_1 = require(\"../Shared/Stores/Quotations/SalesQuotationStore\");\r\nvar store = new SalesQuotationStore_1.default();\r\nvar SaveQuotationButton = (function (_super) {\r\n    __extends(SaveQuotationButton, _super);\r\n    function SaveQuotationButton() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    SaveQuotationButton.prototype.saveNewSalesQuotation = function (e) {\r\n    };\r\n    SaveQuotationButton.prototype.render = function () {\r\n        return (React.createElement(\"input\", {type: \"button\", value: \"Save\", onClick: this.saveNewSalesQuotation.bind(this)}));\r\n    };\r\n    return SaveQuotationButton;\r\n}(React.Component));\r\nvar CancelQuotationButton = (function (_super) {\r\n    __extends(CancelQuotationButton, _super);\r\n    function CancelQuotationButton() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    CancelQuotationButton.prototype.render = function () {\r\n        return (React.createElement(\"input\", {type: \"button\", value: \"Cancel\"}));\r\n    };\r\n    return CancelQuotationButton;\r\n}(React.Component));\r\nvar SalesQuotationHeader = (function (_super) {\r\n    __extends(SalesQuotationHeader, _super);\r\n    function SalesQuotationHeader() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    SalesQuotationHeader.prototype.onChangeQuotationDate = function (e) {\r\n        store.changedQuotationDate(e.target.value);\r\n    };\r\n    SalesQuotationHeader.prototype.render = function () {\r\n        return (React.createElement(\"div\", null, React.createElement(\"div\", null, React.createElement(\"label\", null, \"Customer: \"), React.createElement(SelectCustomer_1.default, {store: store}), store.salesQuotation.customerId), React.createElement(\"div\", null, React.createElement(\"label\", null, \"Quotation Date: \"), React.createElement(\"input\", {type: \"date\", onChange: this.onChangeQuotationDate.bind(this), defaultValue: store.salesQuotation.quotationDate})), React.createElement(\"div\", null, React.createElement(\"label\", null, \"Payment Term: \"), React.createElement(SelectPaymentTerm_1.default, null)), React.createElement(\"div\", null, React.createElement(\"label\", null, \"Reference No: \"), React.createElement(\"input\", {type: \"text\"}))));\r\n    };\r\n    SalesQuotationHeader = __decorate([\r\n        mobx_react_1.observer\r\n    ], SalesQuotationHeader);\r\n    return SalesQuotationHeader;\r\n}(React.Component));\r\nvar SalesQuotationLines = (function (_super) {\r\n    __extends(SalesQuotationLines, _super);\r\n    function SalesQuotationLines() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    SalesQuotationLines.prototype.addLineItem = function () {\r\n        var itemId, measurementId, quantity, amount, discount;\r\n        itemId = document.getElementById(\"optNewItemId\").value;\r\n        measurementId = document.getElementById(\"optNewMeasurementId\").value;\r\n        quantity = document.getElementById(\"txtNewQuantity\").value;\r\n        amount = document.getElementById(\"txtNewAmount\").value;\r\n        discount = document.getElementById(\"txtNewDiscount\").value;\r\n        console.log(\"itemId: \" + itemId + \" | measurementId: \" + measurementId + \" | quantity: \" + quantity + \" | amount: \" + amount + \" | discount: \" + discount);\r\n        store.addLineItem(itemId, measurementId, quantity, amount, discount);\r\n        document.getElementById(\"txtNewQuantity\").value = \"1\";\r\n        document.getElementById(\"txtNewAmount\").value = \"0\";\r\n        document.getElementById(\"txtNewDiscount\").value = \"0\";\r\n    };\r\n    SalesQuotationLines.prototype.onClickRemoveLineItem = function (e) {\r\n        store.removeLineItem(e.target.name);\r\n    };\r\n    SalesQuotationLines.prototype.onChangeQuantity = function (e) {\r\n        store.updateLineItem(e.target.name, \"quantity\", e.target.value);\r\n    };\r\n    SalesQuotationLines.prototype.onChangeAmount = function (e) {\r\n        store.updateLineItem(e.target.name, \"amount\", e.target.value);\r\n    };\r\n    SalesQuotationLines.prototype.onChangeDiscount = function (e) {\r\n        store.updateLineItem(e.target.name, \"discount\", e.target.value);\r\n    };\r\n    SalesQuotationLines.prototype.render = function () {\r\n        var lineItems = [];\r\n        for (var i = 0; i < store.salesQuotation.salesQuotationLines.length; i++) {\r\n            lineItems.push(React.createElement(\"tr\", {key: i}, React.createElement(\"td\", null, React.createElement(SelectLineItem_1.default, {store: store, row: i, selected: store.salesQuotation.salesQuotationLines[i].itemId})), React.createElement(\"td\", null, store.salesQuotation.salesQuotationLines[i].itemId), React.createElement(\"td\", null, React.createElement(SelectLineMeasurement_1.default, {row: i, store: store, selected: store.salesQuotation.salesQuotationLines[i].measurementId}), store.salesQuotation.salesQuotationLines[i].measurementId), React.createElement(\"td\", null, React.createElement(\"input\", {type: \"text\", name: i, value: store.salesQuotation.salesQuotationLines[i].quantity, onChange: this.onChangeQuantity.bind(this)})), React.createElement(\"td\", null, React.createElement(\"input\", {type: \"text\", name: i, value: store.salesQuotation.salesQuotationLines[i].amount, onChange: this.onChangeAmount.bind(this)})), React.createElement(\"td\", null, React.createElement(\"input\", {type: \"text\", name: i, value: store.salesQuotation.salesQuotationLines[i].discount, onChange: this.onChangeDiscount.bind(this)})), React.createElement(\"td\", null, store.lineTotal(i)), React.createElement(\"td\", null, React.createElement(\"input\", {type: \"button\", name: i, value: \"Remove\", onClick: this.onClickRemoveLineItem.bind(this)}))));\r\n        }\r\n        return (React.createElement(\"div\", null, React.createElement(\"table\", null, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"td\", null, \"Item Id\"), React.createElement(\"td\", null, \"Item Name\"), React.createElement(\"td\", null, \"Measurement\"), React.createElement(\"td\", null, \"Quantity\"), React.createElement(\"td\", null, \"Amount\"), React.createElement(\"td\", null, \"Discount\"), React.createElement(\"td\", null, \"Line Total\"), React.createElement(\"td\", null))), React.createElement(\"tbody\", null, lineItems, React.createElement(\"tr\", null, React.createElement(\"td\", null, React.createElement(SelectLineItem_1.default, {store: store, controlId: \"optNewItemId\"})), React.createElement(\"td\", null, \"Item Name\"), React.createElement(\"td\", null, React.createElement(SelectLineMeasurement_1.default, {store: store, controlId: \"optNewMeasurementId\"})), React.createElement(\"td\", null, React.createElement(\"input\", {type: \"text\", id: \"txtNewQuantity\"})), React.createElement(\"td\", null, React.createElement(\"input\", {type: \"text\", id: \"txtNewAmount\"})), React.createElement(\"td\", null, React.createElement(\"input\", {type: \"text\", id: \"txtNewDiscount\"})), React.createElement(\"td\", null), React.createElement(\"td\", null, React.createElement(\"input\", {type: \"button\", value: \"Add\", onClick: this.addLineItem})))), React.createElement(\"tfoot\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {colSpan: \"8\"}, \"Count: \", store.salesQuotation.salesQuotationLines.length))))));\r\n    };\r\n    SalesQuotationLines = __decorate([\r\n        mobx_react_1.observer\r\n    ], SalesQuotationLines);\r\n    return SalesQuotationLines;\r\n}(React.Component));\r\nvar SalesQuotationTotals = (function (_super) {\r\n    __extends(SalesQuotationTotals, _super);\r\n    function SalesQuotationTotals() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    SalesQuotationTotals.prototype.render = function () {\r\n        return (React.createElement(\"div\", null, React.createElement(\"div\", null, React.createElement(\"label\", null, \"Running Total: \")), React.createElement(\"div\", null, React.createElement(\"label\", null, \"Tax Total: \")), React.createElement(\"div\", null, React.createElement(\"label\", null, \"Grand Total: \"), \" \", store.grandTotal())));\r\n    };\r\n    SalesQuotationTotals = __decorate([\r\n        mobx_react_1.observer\r\n    ], SalesQuotationTotals);\r\n    return SalesQuotationTotals;\r\n}(React.Component));\r\nvar AddSalesQuotation = (function (_super) {\r\n    __extends(AddSalesQuotation, _super);\r\n    function AddSalesQuotation() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    AddSalesQuotation.prototype.render = function () {\r\n        return (React.createElement(\"div\", null, React.createElement(\"div\", null, React.createElement(SalesQuotationHeader, null)), React.createElement(\"hr\", null), React.createElement(\"div\", null, React.createElement(SalesQuotationLines, null)), React.createElement(\"hr\", null), React.createElement(\"div\", null, React.createElement(SalesQuotationTotals, null)), React.createElement(\"hr\", null), React.createElement(\"div\", null, React.createElement(SaveQuotationButton, null), React.createElement(CancelQuotationButton, null))));\r\n    };\r\n    return AddSalesQuotation;\r\n}(React.Component));\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = AddSalesQuotation;\r\nReactDOM.render(React.createElement(AddSalesQuotation, null), document.getElementById(\"divAddSalesQuotation\"));\r\n//# sourceMappingURL=AddSalesQuotation.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wwwroot/libs/tsxbuild/quotations/addsalesquotation.js\n ** module id = 0\n ** module chunks = 3\n **/","(function() {\n    function mrFactory(mobx, React, ReactDOM) {\n        if (!mobx)\n            throw new Error(\"mobx-react requires the MobX package\")\n        if (!React)\n            throw new Error(\"mobx-react requires React to be available\");\n\n        var isDevtoolsEnabled = false;\n\n        // WeakMap<Node, Object>;\n        var componentByNodeRegistery = typeof WeakMap !== \"undefined\" ? new WeakMap() : undefined;\n        var renderReporter = new EventEmitter();\n        function findDOMNode(component) {\n            if (ReactDOM)\n                return ReactDOM.findDOMNode(component);\n            return null;\n        }\n\n        function reportRendering(component) {\n            var node = findDOMNode(component);\n            if (node)\n                componentByNodeRegistery.set(node, component);\n\n            renderReporter.emit({\n                event: 'render',\n                renderTime: component.__$mobRenderEnd - component.__$mobRenderStart,\n                totalTime: Date.now() - component.__$mobRenderStart,\n                component: component,\n                node: node\n            });\n        }\n\n        var reactiveMixin = {\n            componentWillMount: function() {\n                // Generate friendly name for debugging\n                var name = [\n                    this.displayName || this.name || (this.constructor && (this.constructor.displayName || this.constructor.name)) || \"<component>\",\n                    \"#\", this._reactInternalInstance && this._reactInternalInstance._rootNodeID,\n                    \".render()\"\n                ].join(\"\");\n\n                var baseRender = this.render.bind(this);\n                var self = this;\n                var reaction = null;\n                var isRenderingPending = false;\n                function initialRender() {\n                    reaction = new mobx.Reaction(name, function() {\n                        if (!isRenderingPending) {\n                            isRenderingPending = true;\n                            if (typeof self.componentWillReact === \"function\")\n                                self.componentWillReact();\n                            React.Component.prototype.forceUpdate.call(self)\n                        }\n                    });\n                    reactiveRender.$mobx = reaction;\n                    self.render = reactiveRender;\n                    return reactiveRender();\n                }\n\n                function reactiveRender() {\n                    isRenderingPending = false;\n                    var rendering;\n                    reaction.track(function() {\n                        if (isDevtoolsEnabled)\n                            self.__$mobRenderStart = Date.now();\n                        rendering = mobx.extras.allowStateChanges(false, baseRender);\n                        if (isDevtoolsEnabled)\n                            self.__$mobRenderEnd = Date.now();\n                    });\n                    return rendering;\n                }\n\n                this.render = initialRender;\n            },\n\n            componentWillUnmount: function() {\n                this.render.$mobx && this.render.$mobx.dispose();\n                if (isDevtoolsEnabled) {\n                    var node = findDOMNode(this);\n                    if (node) {\n                        componentByNodeRegistery.delete(node);\n                    }\n                    renderReporter.emit({\n                        event: 'destroy',\n                        component: this,\n                        node: node\n                    });\n                }\n            },\n\n            componentDidMount: function() {\n                if (isDevtoolsEnabled)\n                    reportRendering(this);\n            },\n\n            componentDidUpdate: function() {\n                if (isDevtoolsEnabled)\n                    reportRendering(this);\n            },\n\n            shouldComponentUpdate: function(nextProps, nextState) {\n                // TODO: if context changed, return true.., see #18\n                \n                // if props or state did change, but a render was scheduled already, no additional render needs to be scheduled\n                if (this.render.$mobx && this.render.$mobx.isScheduled() === true)\n                    return false;\n                \n                // update on any state changes (as is the default)\n                if (this.state !== nextState)\n                    return true;\n                // update if props are shallowly not equal, inspired by PureRenderMixin\n                var keys = Object.keys(this.props);\n                var key;\n                if (keys.length !== Object.keys(nextProps).length)\n                    return true;\n                for(var i = keys.length -1; i >= 0, key = keys[i]; i--) {\n                    var newValue = nextProps[key];\n                    if (newValue !== this.props[key]) {\n                        return true;\n                    } else if (newValue && typeof newValue === \"object\" && !mobx.isObservable(newValue)) {\n                        /**\n                         * If the newValue is still the same object, but that object is not observable,\n                         * fallback to the default React behavior: update, because the object *might* have changed.\n                         * If you need the non default behavior, just use the React pure render mixin, as that one\n                         * will work fine with mobx as well, instead of the default implementation of\n                         * observer.\n                         */\n                        return true;\n                    }\n                }\n                return false;\n            }\n        }\n\n        function patch(target, funcName) {\n            var base = target[funcName];\n            var mixinFunc = reactiveMixin[funcName];\n            if (!base) {\n                target[funcName] = mixinFunc;\n            } else {\n                target[funcName] = function() {\n                    base.apply(this, arguments);\n                    mixinFunc.apply(this, arguments);\n                }\n            }\n        }\n\n        function observer(componentClass) {\n            // If it is function but doesn't seem to be a react class constructor,\n            // wrap it to a react class automatically\n            if (\n                typeof componentClass === \"function\" &&\n                (!componentClass.prototype || !componentClass.prototype.render) &&\n                !componentClass.isReactClass && \n                !React.Component.isPrototypeOf(componentClass)\n            ) {\n                return observer(React.createClass({\n                    displayName:     componentClass.displayName || componentClass.name,\n                    propTypes:       componentClass.propTypes,\n                    contextTypes:    componentClass.contextTypes,\n                    getDefaultProps: function() { return componentClass.defaultProps; },\n                    render:          function() { return componentClass.call(this, this.props, this.context); }\n                }));\n            }\n\n            if (!componentClass)\n                throw new Error(\"Please pass a valid component to 'observer'\");\n            var target = componentClass.prototype || componentClass;\n\n            [\n                \"componentWillMount\",\n                \"componentWillUnmount\",\n                \"componentDidMount\",\n                \"componentDidUpdate\"\n            ].forEach(function(funcName) {\n                patch(target, funcName)\n            });\n\n            if (!target.shouldComponentUpdate)\n                target.shouldComponentUpdate = reactiveMixin.shouldComponentUpdate;\n            componentClass.isMobXReactObserver = true;\n            return componentClass;\n        }\n\n        function trackComponents() {\n            if (typeof WeakMap === \"undefined\")\n                throw new Error(\"[mobx-react] tracking components is not supported in this browser.\");\n            if (!isDevtoolsEnabled)\n                isDevtoolsEnabled = true;\n        }\n\n        function EventEmitter() {\n            this.listeners = [];\n        };\n        EventEmitter.prototype.on = function (cb) {\n            this.listeners.push(cb);\n            var self = this;\n            return function() {\n                var idx = self.listeners.indexOf(cb);\n                if (idx !== -1)\n                    self.listeners.splice(idx, 1);\n            };\n        };\n        EventEmitter.prototype.emit = function(data) {\n            this.listeners.forEach(function (fn) {\n                fn(data);\n            });\n        };\n\n        return ({\n            observer: observer,\n            reactiveComponent: function() {\n                console.warn(\"[mobx-react] `reactiveComponent` has been renamed to `observer` and will be removed in 1.1.\");\n                return observer.apply(null, arguments);\n            },\n            renderReporter: renderReporter,\n            componentByNodeRegistery: componentByNodeRegistery,\n            trackComponents: trackComponents\n        });\n    }\n\n    // UMD\n    if (typeof exports === 'object') {\n        module.exports = mrFactory(require('mobx'), require('react'), require('react-dom'));\n    } else if (typeof define === 'function' && define.amd) {\n        define('mobx-react', ['mobx', 'react', 'react-dom'], mrFactory);\n    } else {\n        this.mobxReact = mrFactory(this['mobx'], this['React'], this['ReactDOM']);\n    }\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mobx-react/index.js\n ** module id = 168\n ** module chunks = 1 2 3 4 5\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nregisterGlobals();\nexports.extras = {\n    allowStateChanges: allowStateChanges,\n    getAtom: getAtom,\n    getDebugName: getDebugName,\n    getDependencyTree: getDependencyTree,\n    getObserverTree: getObserverTree,\n    isComputingDerivation: isComputingDerivation,\n    isSpyEnabled: isSpyEnabled,\n    resetGlobalState: resetGlobalState,\n    spyReport: spyReport,\n    spyReportEnd: spyReportEnd,\n    spyReportStart: spyReportStart,\n    trackTransitions: trackTransitions\n};\nexports._ = {\n    getAdministration: getAdministration,\n    quickDiff: quickDiff,\n    resetGlobalState: resetGlobalState\n};\nfunction autorun(arg1, arg2, arg3) {\n    var name, view, scope;\n    if (typeof arg1 === \"string\") {\n        name = arg1;\n        view = arg2;\n        scope = arg3;\n    }\n    else if (typeof arg1 === \"function\") {\n        name = arg1.name || (\"Autorun@\" + getNextId());\n        view = arg1;\n        scope = arg2;\n    }\n    assertUnwrapped(view, \"autorun methods cannot have modifiers\");\n    invariant(typeof view === \"function\", \"autorun expects a function\");\n    invariant(view.length === 0, \"autorun expects a function without arguments\");\n    if (scope)\n        view = view.bind(scope);\n    var reaction = new Reaction(name, function () {\n        this.track(view);\n    });\n    reaction.schedule();\n    return reaction.getDisposer();\n}\nexports.autorun = autorun;\nfunction when(arg1, arg2, arg3, arg4) {\n    var name, predicate, effect, scope;\n    if (typeof arg1 === \"string\") {\n        name = arg1;\n        predicate = arg2;\n        effect = arg3;\n        scope = arg4;\n    }\n    else if (typeof arg1 === \"function\") {\n        name = (\"When@\" + getNextId());\n        predicate = arg1;\n        effect = arg2;\n        scope = arg3;\n    }\n    var disposeImmediately = false;\n    var disposer = autorun(name, function () {\n        if (predicate.call(scope)) {\n            if (disposer)\n                disposer();\n            else\n                disposeImmediately = true;\n            var prevUntracked = untrackedStart();\n            effect.call(scope);\n            untrackedEnd(prevUntracked);\n        }\n    });\n    if (disposeImmediately)\n        disposer();\n    return disposer;\n}\nexports.when = when;\nfunction autorunUntil(predicate, effect, scope) {\n    deprecated(\"`autorunUntil` is deprecated, please use `when`.\");\n    return when.apply(null, arguments);\n}\nexports.autorunUntil = autorunUntil;\nfunction autorunAsync(arg1, arg2, arg3, arg4) {\n    var name, func, delay, scope;\n    if (typeof arg1 === \"string\") {\n        name = arg1;\n        func = arg2;\n        delay = arg3;\n        scope = arg4;\n    }\n    else if (typeof arg1 === \"function\") {\n        name = arg1.name || (\"AutorunAsync@\" + getNextId());\n        func = arg1;\n        delay = arg2;\n        scope = arg3;\n    }\n    if (delay === void 0)\n        delay = 1;\n    if (scope)\n        func = func.bind(scope);\n    var isScheduled = false;\n    var r = new Reaction(name, function () {\n        if (!isScheduled) {\n            isScheduled = true;\n            setTimeout(function () {\n                isScheduled = false;\n                if (!r.isDisposed)\n                    r.track(func);\n            }, delay);\n        }\n    });\n    r.schedule();\n    return r.getDisposer();\n}\nexports.autorunAsync = autorunAsync;\nfunction reaction(arg1, arg2, arg3, arg4, arg5, arg6) {\n    var name, expression, effect, fireImmediately, delay, scope;\n    if (typeof arg1 === \"string\") {\n        name = arg1;\n        expression = arg2;\n        effect = arg3;\n        fireImmediately = arg4;\n        delay = arg5;\n        scope = arg6;\n    }\n    else {\n        name = arg1.name || arg2.name || (\"Reaction@\" + getNextId());\n        expression = arg1;\n        effect = arg2;\n        fireImmediately = arg3;\n        delay = arg4;\n        scope = arg5;\n    }\n    if (fireImmediately === void 0)\n        fireImmediately = false;\n    if (delay === void 0)\n        delay = 0;\n    var _a = getValueModeFromValue(expression, ValueMode.Reference), valueMode = _a[0], unwrappedExpression = _a[1];\n    var compareStructural = valueMode === ValueMode.Structure;\n    if (scope) {\n        unwrappedExpression = unwrappedExpression.bind(scope);\n        effect = action(name, effect.bind(scope));\n    }\n    var firstTime = true;\n    var isScheduled = false;\n    var nextValue = undefined;\n    function reactionRunner() {\n        if (r.isDisposed)\n            return;\n        var changed = false;\n        r.track(function () {\n            var v = unwrappedExpression();\n            changed = valueDidChange(compareStructural, nextValue, v);\n            nextValue = v;\n        });\n        if (firstTime && fireImmediately)\n            effect(nextValue);\n        if (!firstTime && changed === true)\n            effect(nextValue);\n        if (firstTime)\n            firstTime = false;\n    }\n    var r = new Reaction(name, function () {\n        if (delay < 1) {\n            reactionRunner();\n        }\n        else if (!isScheduled) {\n            isScheduled = true;\n            setTimeout(function () {\n                isScheduled = false;\n                reactionRunner();\n            }, delay);\n        }\n    });\n    r.schedule();\n    return r.getDisposer();\n}\nexports.reaction = reaction;\nvar computedDecorator = createClassPropertyDecorator(function (target, name, _, decoratorArgs, originalDescriptor) {\n    var baseValue = originalDescriptor.get;\n    invariant(typeof baseValue === \"function\", \"@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'\");\n    var compareStructural = false;\n    if (decoratorArgs && decoratorArgs.length === 1 && decoratorArgs[0].asStructure === true)\n        compareStructural = true;\n    var adm = asObservableObject(target, undefined, ValueMode.Recursive);\n    defineObservableProperty(adm, name, compareStructural ? asStructure(baseValue) : baseValue, false);\n}, function (name) {\n    return this.$mobx.values[name].get();\n}, throwingComputedValueSetter, false, true);\nfunction computed(targetOrExpr, keyOrScope, baseDescriptor, options) {\n    if (arguments.length < 3 && typeof targetOrExpr === \"function\")\n        return computedExpr(targetOrExpr, keyOrScope);\n    invariant(!baseDescriptor || !baseDescriptor.set, \"@observable properties cannot have a setter: \" + keyOrScope);\n    return computedDecorator.apply(null, arguments);\n}\nexports.computed = computed;\nfunction computedExpr(expr, scope) {\n    var _a = getValueModeFromValue(expr, ValueMode.Recursive), mode = _a[0], value = _a[1];\n    return new ComputedValue(value, scope, mode === ValueMode.Structure, value.name);\n}\nfunction throwingComputedValueSetter() {\n    throw new Error(\"[ComputedValue] It is not allowed to assign new values to computed properties.\");\n}\nfunction createTransformer(transformer, onCleanup) {\n    invariant(typeof transformer === \"function\" && transformer.length === 1, \"createTransformer expects a function that accepts one argument\");\n    var objectCache = {};\n    var resetId = globalState.resetId;\n    var Transformer = (function (_super) {\n        __extends(Transformer, _super);\n        function Transformer(sourceIdentifier, sourceObject) {\n            _super.call(this, function () { return transformer(sourceObject); }, null, false, \"Transformer-\" + transformer.name + \"-\" + sourceIdentifier);\n            this.sourceIdentifier = sourceIdentifier;\n            this.sourceObject = sourceObject;\n        }\n        Transformer.prototype.onBecomeUnobserved = function () {\n            var lastValue = this.value;\n            _super.prototype.onBecomeUnobserved.call(this);\n            delete objectCache[this.sourceIdentifier];\n            if (onCleanup)\n                onCleanup(lastValue, this.sourceObject);\n        };\n        return Transformer;\n    }(ComputedValue));\n    return function (object) {\n        if (resetId !== globalState.resetId) {\n            objectCache = {};\n            resetId = globalState.resetId;\n        }\n        var identifier = getMemoizationId(object);\n        var reactiveTransformer = objectCache[identifier];\n        if (reactiveTransformer)\n            return reactiveTransformer.get();\n        reactiveTransformer = objectCache[identifier] = new Transformer(identifier, object);\n        return reactiveTransformer.get();\n    };\n}\nexports.createTransformer = createTransformer;\nfunction getMemoizationId(object) {\n    if (object === null || typeof object !== \"object\")\n        throw new Error(\"[mobx] transform expected some kind of object, got: \" + object);\n    var tid = object.$transformId;\n    if (tid === undefined) {\n        tid = getNextId();\n        Object.defineProperty(object, \"$transformId\", {\n            configurable: true,\n            writable: true,\n            enumerable: false,\n            value: tid\n        });\n    }\n    return tid;\n}\nfunction expr(expr, scope) {\n    if (!isComputingDerivation())\n        console.warn(\"[mobx.expr] 'expr' should only be used inside other reactive functions.\");\n    return computed(expr, scope).get();\n}\nexports.expr = expr;\nfunction extendObservable(target) {\n    var properties = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        properties[_i - 1] = arguments[_i];\n    }\n    invariant(arguments.length >= 2, \"extendObservable expected 2 or more arguments\");\n    invariant(typeof target === \"object\", \"extendObservable expects an object as first argument\");\n    invariant(!(target instanceof ObservableMap), \"extendObservable should not be used on maps, use map.merge instead\");\n    properties.forEach(function (propSet) {\n        invariant(typeof propSet === \"object\", \"all arguments of extendObservable should be objects\");\n        extendObservableHelper(target, propSet, ValueMode.Recursive, null);\n    });\n    return target;\n}\nexports.extendObservable = extendObservable;\nfunction extendObservableHelper(target, properties, mode, name) {\n    var adm = asObservableObject(target, name, mode);\n    for (var key in properties)\n        if (properties.hasOwnProperty(key)) {\n            if (target === properties && !isPropertyConfigurable(target, key))\n                continue;\n            setObservableObjectInstanceProperty(adm, key, properties[key]);\n        }\n    return target;\n}\nfunction getDependencyTree(thing, property) {\n    return nodeToDependencyTree(getAtom(thing, property));\n}\nfunction nodeToDependencyTree(node) {\n    var result = {\n        name: node.name\n    };\n    if (node.observing && node.observing.length)\n        result.dependencies = unique(node.observing).map(nodeToDependencyTree);\n    return result;\n}\nfunction getObserverTree(thing, property) {\n    return nodeToObserverTree(getAtom(thing, property));\n}\nfunction nodeToObserverTree(node) {\n    var result = {\n        name: node.name\n    };\n    if (node.observers && node.observers.length)\n        result.observers = unique(node.observers).map(nodeToObserverTree);\n    return result;\n}\nfunction intercept(thing, propOrHandler, handler) {\n    if (typeof handler === \"function\")\n        return interceptProperty(thing, propOrHandler, handler);\n    else\n        return interceptInterceptable(thing, propOrHandler);\n}\nexports.intercept = intercept;\nfunction interceptInterceptable(thing, handler) {\n    if (isPlainObject(thing) && !isObservableObject(thing)) {\n        deprecated(\"Passing plain objects to intercept / observe is deprecated and will be removed in 3.0\");\n        return getAdministration(observable(thing)).intercept(handler);\n    }\n    return getAdministration(thing).intercept(handler);\n}\nfunction interceptProperty(thing, property, handler) {\n    if (isPlainObject(thing) && !isObservableObject(thing)) {\n        deprecated(\"Passing plain objects to intercept / observe is deprecated and will be removed in 3.0\");\n        extendObservable(thing, {\n            property: thing[property]\n        });\n        return interceptProperty(thing, property, handler);\n    }\n    return getAdministration(thing, property).intercept(handler);\n}\nfunction isObservable(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (value instanceof ObservableMap || value instanceof ObservableArray)\n            throw new Error(\"[mobx.isObservable] isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\");\n        else if (isObservableObject(value)) {\n            var o = value.$mobx;\n            return o.values && !!o.values[property];\n        }\n        return false;\n    }\n    return !!value.$mobx || value instanceof Atom || value instanceof Reaction || value instanceof ComputedValue;\n}\nexports.isObservable = isObservable;\nvar decoratorImpl = createClassPropertyDecorator(function (target, name, baseValue) {\n    var prevA = allowStateChangesStart(true);\n    if (typeof baseValue === \"function\")\n        baseValue = asReference(baseValue);\n    var adm = asObservableObject(target, undefined, ValueMode.Recursive);\n    defineObservableProperty(adm, name, baseValue, false);\n    allowStateChangesEnd(prevA);\n}, function (name) {\n    return this.$mobx.values[name].get();\n}, function (name, value) {\n    setPropertyValue(this, name, value);\n}, true, false);\nfunction observableDecorator(target, key, baseDescriptor) {\n    invariant(arguments.length >= 2 && arguments.length <= 3, \"Illegal decorator config\", key);\n    assertPropertyConfigurable(target, key);\n    invariant(!baseDescriptor || !baseDescriptor.get, \"@observable can not be used on getters, use @computed instead\");\n    return decoratorImpl.apply(null, arguments);\n}\nfunction observable(v, keyOrScope) {\n    if (v === void 0) { v = undefined; }\n    if (typeof arguments[1] === \"string\")\n        return observableDecorator.apply(null, arguments);\n    invariant(arguments.length < 3, \"observable expects zero, one or two arguments\");\n    if (isObservable(v))\n        return v;\n    var _a = getValueModeFromValue(v, ValueMode.Recursive), mode = _a[0], value = _a[1];\n    var sourceType = mode === ValueMode.Reference ? ValueType.Reference : getTypeOfValue(value);\n    switch (sourceType) {\n        case ValueType.Array:\n        case ValueType.PlainObject:\n            return makeChildObservable(value, mode);\n        case ValueType.Reference:\n        case ValueType.ComplexObject:\n            return new ObservableValue(value, mode);\n        case ValueType.ComplexFunction:\n            throw new Error(\"[mobx.observable] To be able to make a function reactive it should not have arguments. If you need an observable reference to a function, use `observable(asReference(f))`\");\n        case ValueType.ViewFunction:\n            deprecated(\"Use `computed(expr)` instead of `observable(expr)`\");\n            return computed(v, keyOrScope);\n    }\n    invariant(false, \"Illegal State\");\n}\nexports.observable = observable;\nvar ValueType;\n(function (ValueType) {\n    ValueType[ValueType[\"Reference\"] = 0] = \"Reference\";\n    ValueType[ValueType[\"PlainObject\"] = 1] = \"PlainObject\";\n    ValueType[ValueType[\"ComplexObject\"] = 2] = \"ComplexObject\";\n    ValueType[ValueType[\"Array\"] = 3] = \"Array\";\n    ValueType[ValueType[\"ViewFunction\"] = 4] = \"ViewFunction\";\n    ValueType[ValueType[\"ComplexFunction\"] = 5] = \"ComplexFunction\";\n})(ValueType || (ValueType = {}));\nfunction getTypeOfValue(value) {\n    if (value === null || value === undefined)\n        return ValueType.Reference;\n    if (typeof value === \"function\")\n        return value.length ? ValueType.ComplexFunction : ValueType.ViewFunction;\n    if (Array.isArray(value) || value instanceof ObservableArray)\n        return ValueType.Array;\n    if (typeof value === \"object\")\n        return isPlainObject(value) ? ValueType.PlainObject : ValueType.ComplexObject;\n    return ValueType.Reference;\n}\nfunction observe(thing, propOrCb, cbOrFire, fireImmediately) {\n    if (typeof cbOrFire === \"function\")\n        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);\n    else\n        return observeObservable(thing, propOrCb, cbOrFire);\n}\nexports.observe = observe;\nfunction observeObservable(thing, listener, fireImmediately) {\n    if (isPlainObject(thing) && !isObservableObject(thing)) {\n        deprecated(\"Passing plain objects to intercept / observe is deprecated and will be removed in 3.0\");\n        return getAdministration(observable(thing)).observe(listener, fireImmediately);\n    }\n    return getAdministration(thing).observe(listener, fireImmediately);\n}\nfunction observeObservableProperty(thing, property, listener, fireImmediately) {\n    if (isPlainObject(thing) && !isObservableObject(thing)) {\n        deprecated(\"Passing plain objects to intercept / observe is deprecated and will be removed in 3.0\");\n        extendObservable(thing, {\n            property: thing[property]\n        });\n        return observeObservableProperty(thing, property, listener, fireImmediately);\n    }\n    return getAdministration(thing, property).observe(listener, fireImmediately);\n}\nfunction toJS(source, detectCycles, __alreadySeen) {\n    if (detectCycles === void 0) { detectCycles = true; }\n    if (__alreadySeen === void 0) { __alreadySeen = null; }\n    function cache(value) {\n        if (detectCycles)\n            __alreadySeen.push([source, value]);\n        return value;\n    }\n    if (detectCycles && __alreadySeen === null)\n        __alreadySeen = [];\n    if (detectCycles && source !== null && typeof source === \"object\") {\n        for (var i = 0, l = __alreadySeen.length; i < l; i++)\n            if (__alreadySeen[i][0] === source)\n                return __alreadySeen[i][1];\n    }\n    if (!source)\n        return source;\n    if (Array.isArray(source) || source instanceof ObservableArray) {\n        var res = cache([]);\n        var toAdd = source.map(function (value) { return toJS(value, detectCycles, __alreadySeen); });\n        res.length = toAdd.length;\n        for (var i = 0, l = toAdd.length; i < l; i++)\n            res[i] = toAdd[i];\n        return res;\n    }\n    if (source instanceof ObservableMap) {\n        var res_1 = cache({});\n        source.forEach(function (value, key) { return res_1[key] = toJS(value, detectCycles, __alreadySeen); });\n        return res_1;\n    }\n    if (isObservable(source) && source.$mobx instanceof ObservableValue)\n        return toJS(source(), detectCycles, __alreadySeen);\n    if (source instanceof ObservableValue)\n        return toJS(source.get(), detectCycles, __alreadySeen);\n    if (typeof source === \"object\") {\n        var res = cache({});\n        for (var key in source)\n            res[key] = toJS(source[key], detectCycles, __alreadySeen);\n        return res;\n    }\n    return source;\n}\nexports.toJS = toJS;\nfunction toJSON(source, detectCycles, __alreadySeen) {\n    if (detectCycles === void 0) { detectCycles = true; }\n    if (__alreadySeen === void 0) { __alreadySeen = null; }\n    deprecated(\"toJSON is deprecated. Use toJS instead\");\n    return toJS.apply(null, arguments);\n}\nexports.toJSON = toJSON;\nfunction log(msg) {\n    console.log(msg);\n    return msg;\n}\nfunction whyRun(thing, prop) {\n    switch (arguments.length) {\n        case 0:\n            thing = globalState.derivationStack[globalState.derivationStack.length - 1];\n            if (!thing)\n                return log(\"whyRun() can only be used if a derivation is active, or by passing an computed value / reaction explicitly. If you invoked whyRun from inside a computation; the computation is currently suspended but re-evaluating because somebody requested it's value.\");\n            break;\n        case 2:\n            thing = getAtom(thing, prop);\n            break;\n    }\n    thing = getAtom(thing);\n    if (thing instanceof ComputedValue)\n        return log(thing.whyRun());\n    else if (thing instanceof Reaction)\n        return log(thing.whyRun());\n    else\n        invariant(false, \"whyRun can only be used on reactions and computed values\");\n}\nexports.whyRun = whyRun;\nvar actionDecorator = createClassPropertyDecorator(function (target, key, value, args, originalDescriptor) {\n    var actionName = (args && args.length === 1) ? args[0] : (value.name || key || \"<unnamed action>\");\n    var wrappedAction = action(actionName, value);\n    if (originalDescriptor && originalDescriptor.value && target.constructor && target.constructor.prototype) {\n        Object.defineProperty(target.constructor.prototype, key, {\n            configurable: true, enumerable: false, writable: false,\n            value: wrappedAction\n        });\n    }\n    else {\n        Object.defineProperty(target, key, {\n            configurable: true, enumerable: false, writable: false,\n            value: wrappedAction\n        });\n    }\n}, function (key) {\n    return this[key];\n}, function () {\n    invariant(false, \"It is not allowed to assign new values to @action fields\");\n}, false, true);\nfunction action(arg1, arg2, arg3, arg4) {\n    if (arguments.length === 1 && typeof arg1 === \"function\")\n        return actionImplementation(arg1.name || \"<unnamed action>\", arg1);\n    if (arguments.length === 2 && typeof arg2 === \"function\")\n        return actionImplementation(arg1, arg2);\n    return actionDecorator.apply(null, arguments);\n}\nexports.action = action;\nfunction isAction(thing) {\n    return typeof thing === \"function\" && thing.isMobxAction === true;\n}\nexports.isAction = isAction;\nfunction runInAction(arg1, arg2, arg3) {\n    var actionName = typeof arg1 === \"string\" ? arg1 : arg1.name || \"<unnamed action>\";\n    var fn = typeof arg1 === \"function\" ? arg1 : arg2;\n    var scope = typeof arg1 === \"function\" ? arg2 : arg3;\n    invariant(typeof fn === \"function\", \"`runInAction` expects a function\");\n    invariant(fn.length === 0, \"`runInAction` expects a function without arguments\");\n    invariant(typeof actionName === \"string\" && actionName.length > 0, \"actions should have valid names, got: '\" + actionName + \"'\");\n    return executeWrapped(actionName, fn, scope, undefined);\n}\nexports.runInAction = runInAction;\nfunction actionImplementation(actionName, fn) {\n    invariant(typeof fn === \"function\", \"`action` can only be invoked on functions\");\n    invariant(typeof actionName === \"string\" && actionName.length > 0, \"actions should have valid names, got: '\" + actionName + \"'\");\n    var res = function () {\n        return executeWrapped(actionName, fn, this, arguments);\n    };\n    res.isMobxAction = true;\n    return res;\n}\nfunction executeWrapped(actionName, fn, scope, args) {\n    var ds = globalState.derivationStack;\n    invariant(!(ds[ds.length - 1] instanceof ComputedValue), \"Computed values or transformers should not invoke actions or trigger other side effects\");\n    var notifySpy = isSpyEnabled();\n    var startTime;\n    if (notifySpy) {\n        startTime = Date.now();\n        var flattendArgs = [];\n        for (var i = 0, l = args.length; i < l; i++)\n            flattendArgs.push(args[i]);\n        spyReportStart({\n            type: \"action\",\n            name: actionName,\n            fn: fn,\n            target: scope,\n            arguments: flattendArgs\n        });\n    }\n    var prevUntracked = untrackedStart();\n    transactionStart(actionName, scope, false);\n    var prevAllowStateChanges = allowStateChangesStart(true);\n    try {\n        return fn.apply(scope, args);\n    }\n    finally {\n        allowStateChangesEnd(prevAllowStateChanges);\n        transactionEnd(false);\n        untrackedEnd(prevUntracked);\n        if (notifySpy)\n            spyReportEnd({ time: Date.now() - startTime });\n    }\n}\nfunction useStrict(strict) {\n    invariant(globalState.derivationStack.length === 0, \"It is not allowed to set `useStrict` when a derivation is running\");\n    globalState.strictMode = strict;\n    globalState.allowStateChanges = !strict;\n}\nexports.useStrict = useStrict;\nfunction allowStateChanges(allowStateChanges, func) {\n    var prev = allowStateChangesStart(allowStateChanges);\n    var res = func();\n    allowStateChangesEnd(prev);\n    return res;\n}\nfunction allowStateChangesStart(allowStateChanges) {\n    var prev = globalState.allowStateChanges;\n    globalState.allowStateChanges = allowStateChanges;\n    return prev;\n}\nfunction allowStateChangesEnd(prev) {\n    globalState.allowStateChanges = prev;\n}\nfunction propagateAtomReady(atom) {\n    invariant(atom.isDirty, \"atom not dirty\");\n    atom.isDirty = false;\n    propagateReadiness(atom, true);\n}\nvar Atom = (function () {\n    function Atom(name, onBecomeObserved, onBecomeUnobserved) {\n        if (name === void 0) { name = \"Atom@\" + getNextId(); }\n        if (onBecomeObserved === void 0) { onBecomeObserved = noop; }\n        if (onBecomeUnobserved === void 0) { onBecomeUnobserved = noop; }\n        this.name = name;\n        this.onBecomeObserved = onBecomeObserved;\n        this.onBecomeUnobserved = onBecomeUnobserved;\n        this.isDirty = false;\n        this.staleObservers = [];\n        this.observers = [];\n    }\n    Atom.prototype.reportObserved = function () {\n        reportObserved(this);\n    };\n    Atom.prototype.reportChanged = function () {\n        if (!this.isDirty) {\n            this.reportStale();\n            this.reportReady();\n        }\n    };\n    Atom.prototype.reportStale = function () {\n        if (!this.isDirty) {\n            this.isDirty = true;\n            propagateStaleness(this);\n        }\n    };\n    Atom.prototype.reportReady = function () {\n        invariant(this.isDirty, \"atom not dirty\");\n        if (globalState.inTransaction > 0)\n            globalState.changedAtoms.push(this);\n        else {\n            propagateAtomReady(this);\n            runReactions();\n        }\n    };\n    Atom.prototype.toString = function () {\n        return this.name;\n    };\n    return Atom;\n}());\nexports.Atom = Atom;\nvar ComputedValue = (function () {\n    function ComputedValue(derivation, scope, compareStructural, name) {\n        this.derivation = derivation;\n        this.scope = scope;\n        this.compareStructural = compareStructural;\n        this.isLazy = true;\n        this.isComputing = false;\n        this.staleObservers = [];\n        this.observers = [];\n        this.observing = [];\n        this.dependencyChangeCount = 0;\n        this.dependencyStaleCount = 0;\n        this.value = undefined;\n        this.name = name || \"ComputedValue@\" + getNextId();\n    }\n    ComputedValue.prototype.peek = function () {\n        this.isComputing = true;\n        var prevAllowStateChanges = allowStateChangesStart(false);\n        var res = this.derivation.call(this.scope);\n        allowStateChangesEnd(prevAllowStateChanges);\n        this.isComputing = false;\n        return res;\n    };\n    ;\n    ComputedValue.prototype.onBecomeObserved = function () {\n    };\n    ComputedValue.prototype.onBecomeUnobserved = function () {\n        for (var i = 0, l = this.observing.length; i < l; i++)\n            removeObserver(this.observing[i], this);\n        this.observing = [];\n        this.isLazy = true;\n        this.value = undefined;\n    };\n    ComputedValue.prototype.onDependenciesReady = function () {\n        var changed = this.trackAndCompute();\n        return changed;\n    };\n    ComputedValue.prototype.get = function () {\n        invariant(!this.isComputing, \"Cycle detected\", this.derivation);\n        reportObserved(this);\n        if (this.dependencyStaleCount > 0) {\n            return this.peek();\n        }\n        if (this.isLazy) {\n            if (isComputingDerivation()) {\n                this.isLazy = false;\n                this.trackAndCompute();\n            }\n            else {\n                return this.peek();\n            }\n        }\n        return this.value;\n    };\n    ComputedValue.prototype.set = function (_) {\n        throw new Error(\"[ComputedValue '\" + name + \"'] It is not possible to assign a new value to a computed value.\");\n    };\n    ComputedValue.prototype.trackAndCompute = function () {\n        if (isSpyEnabled()) {\n            spyReport({\n                object: this,\n                type: \"compute\",\n                fn: this.derivation,\n                target: this.scope\n            });\n        }\n        var oldValue = this.value;\n        var newValue = this.value = trackDerivedFunction(this, this.peek);\n        return valueDidChange(this.compareStructural, newValue, oldValue);\n    };\n    ComputedValue.prototype.observe = function (listener, fireImmediately) {\n        var _this = this;\n        var firstTime = true;\n        var prevValue = undefined;\n        return autorun(function () {\n            var newValue = _this.get();\n            if (!firstTime || fireImmediately) {\n                var prevU = untrackedStart();\n                listener(newValue, prevValue);\n                untrackedEnd(prevU);\n            }\n            firstTime = false;\n            prevValue = newValue;\n        });\n    };\n    ComputedValue.prototype.toJSON = function () {\n        return this.get();\n    };\n    ComputedValue.prototype.toString = function () {\n        return this.name + \"[\" + this.derivation.toString() + \"]\";\n    };\n    ComputedValue.prototype.whyRun = function () {\n        var isTracking = globalState.derivationStack.length > 0;\n        var observing = unique(this.observing).map(function (dep) { return dep.name; });\n        var observers = unique(this.observers).map(function (dep) { return dep.name; });\n        var runReason = (this.isComputing\n            ? isTracking\n                ? this.observers.length > 0\n                    ? RunReason.INVALIDATED\n                    : RunReason.REQUIRED\n                : RunReason.PEEK\n            : RunReason.NOT_RUNNING);\n        if (runReason === RunReason.REQUIRED) {\n            var requiredBy = globalState.derivationStack[globalState.derivationStack.length - 2];\n            if (requiredBy)\n                observers.push(requiredBy.name);\n        }\n        return ((\"\\nWhyRun? computation '\" + this.name + \"':\\n * Running because: \" + runReasonTexts[runReason] + \" \" + ((runReason === RunReason.NOT_RUNNING) && this.dependencyStaleCount > 0 ? \"(a next run is scheduled)\" : \"\") + \"\\n\") +\n            (this.isLazy\n                ?\n                    \" * This computation is suspended (not in use by any reaction) and won't run automatically.\\n\\tDidn't expect this computation to be suspended at this point?\\n\\t  1. Make sure this computation is used by a reaction (reaction, autorun, observer).\\n\\t  2. Check whether you are using this computation synchronously (in the same stack as they reaction that needs it).\\n\"\n                :\n                    \" * This computation will re-run if any of the following observables changes:\\n    \" + joinStrings(observing) + \"\\n    \" + ((this.isComputing && isTracking) ? \" (... or any observable accessed during the remainder of the current run)\" : \"\") + \"\\n\\tMissing items in this list?\\n\\t  1. Check whether all used values are properly marked as observable (use isObservable to verify)\\n\\t  2. Make sure you didn't dereference values too early. MobX observes props, not primitives. E.g: use 'person.name' instead of 'name' in your computation.\\n  * If the outcome of this computation changes, the following observers will be re-run:\\n    \" + joinStrings(observers) + \"\\n\"));\n    };\n    return ComputedValue;\n}());\nvar RunReason;\n(function (RunReason) {\n    RunReason[RunReason[\"PEEK\"] = 0] = \"PEEK\";\n    RunReason[RunReason[\"INVALIDATED\"] = 1] = \"INVALIDATED\";\n    RunReason[RunReason[\"REQUIRED\"] = 2] = \"REQUIRED\";\n    RunReason[RunReason[\"NOT_RUNNING\"] = 3] = \"NOT_RUNNING\";\n})(RunReason || (RunReason = {}));\nvar runReasonTexts = (_a = {},\n    _a[RunReason.PEEK] = \"[peek] The value of this computed value was requested outside an reaction\",\n    _a[RunReason.INVALIDATED] = \"[invalidated] Some observables used by this computation did change\",\n    _a[RunReason.REQUIRED] = \"[started] This computation is required by another computed value / reaction\",\n    _a[RunReason.NOT_RUNNING] = \"[idle] This compution is currently not running\",\n    _a\n);\nfunction isComputingDerivation() {\n    return globalState.derivationStack.length > 0;\n}\nfunction checkIfStateModificationsAreAllowed() {\n    if (!globalState.allowStateChanges) {\n        invariant(false, globalState.strictMode\n            ? \"It is not allowed to create or change state outside an `action` when MobX is in strict mode. Wrap the current method in `action` if this state change is intended\"\n            : \"It is not allowed to change the state when a computed value or transformer is being evaluated. Use 'autorun' to create reactive functions with side-effects.\");\n    }\n}\nfunction notifyDependencyStale(derivation) {\n    if (++derivation.dependencyStaleCount === 1) {\n        propagateStaleness(derivation);\n    }\n}\nfunction notifyDependencyReady(derivation, dependencyDidChange) {\n    invariant(derivation.dependencyStaleCount > 0, \"unexpected ready notification\");\n    if (dependencyDidChange)\n        derivation.dependencyChangeCount += 1;\n    if (--derivation.dependencyStaleCount === 0) {\n        if (derivation.dependencyChangeCount > 0) {\n            derivation.dependencyChangeCount = 0;\n            var changed = derivation.onDependenciesReady();\n            propagateReadiness(derivation, changed);\n        }\n        else {\n            propagateReadiness(derivation, false);\n        }\n    }\n}\nfunction trackDerivedFunction(derivation, f) {\n    var hasException = true;\n    var prevObserving = derivation.observing;\n    derivation.observing = [];\n    globalState.derivationStack.push(derivation);\n    var prevTracking = globalState.isTracking;\n    globalState.isTracking = true;\n    try {\n        var result = f.call(derivation);\n        hasException = false;\n        bindDependencies(derivation, prevObserving);\n        globalState.isTracking = prevTracking;\n        return result;\n    }\n    finally {\n        if (hasException) {\n            var message = (\"[mobx] An uncaught exception occurred while calculating your computed value, autorun or transformer. Or inside the render() method of an observer based React component. \" +\n                \"These methods should never throw exceptions as MobX will usually not be able to recover from them. \" +\n                (\"Please enable 'Pause on (caught) exceptions' in your debugger to find the root cause. In: '\" + derivation.name + \"'\"));\n            if (isSpyEnabled()) {\n                spyReport({\n                    type: \"error\",\n                    object: this,\n                    message: message\n                });\n            }\n            console.error(message);\n            resetGlobalState();\n        }\n    }\n}\nfunction bindDependencies(derivation, prevObserving) {\n    globalState.derivationStack.length -= 1;\n    var _a = quickDiff(derivation.observing, prevObserving), added = _a[0], removed = _a[1];\n    for (var i = 0, l = added.length; i < l; i++) {\n        var dependency = added[i];\n        invariant(!findCycle(derivation, dependency), \"Cycle detected\", derivation);\n        addObserver(added[i], derivation);\n    }\n    for (var i = 0, l = removed.length; i < l; i++)\n        removeObserver(removed[i], derivation);\n}\nfunction findCycle(needle, node) {\n    if (needle === node)\n        return true;\n    var obs = node.observing;\n    if (obs === undefined)\n        return false;\n    for (var l = obs.length, i = 0; i < l; i++)\n        if (findCycle(needle, obs[i]))\n            return true;\n    return false;\n}\nfunction untracked(action) {\n    var prev = untrackedStart();\n    var res = action();\n    untrackedEnd(prev);\n    return res;\n}\nexports.untracked = untracked;\nfunction untrackedStart() {\n    var prev = globalState.isTracking;\n    globalState.isTracking = false;\n    return prev;\n}\nfunction untrackedEnd(prev) {\n    globalState.isTracking = prev;\n}\nvar persistentKeys = [\"mobxGuid\", \"resetId\", \"spyListeners\", \"strictMode\"];\nvar MobXGlobals = (function () {\n    function MobXGlobals() {\n        this.version = 2;\n        this.derivationStack = [];\n        this.mobxGuid = 0;\n        this.inTransaction = 0;\n        this.isTracking = false;\n        this.isRunningReactions = false;\n        this.changedAtoms = [];\n        this.pendingReactions = [];\n        this.allowStateChanges = true;\n        this.strictMode = false;\n        this.resetId = 0;\n        this.spyListeners = [];\n    }\n    return MobXGlobals;\n}());\nvar globalState = (function () {\n    var res = new MobXGlobals();\n    if (global.__mobservableTrackingStack || global.__mobservableViewStack)\n        throw new Error(\"[mobx] An incompatible version of mobservable is already loaded.\");\n    if (global.__mobxGlobal && global.__mobxGlobal.version !== res.version)\n        throw new Error(\"[mobx] An incompatible version of mobx is already loaded.\");\n    if (global.__mobxGlobal)\n        return global.__mobxGlobal;\n    return global.__mobxGlobal = res;\n})();\nfunction registerGlobals() {\n}\nfunction resetGlobalState() {\n    globalState.resetId++;\n    var defaultGlobals = new MobXGlobals();\n    for (var key in defaultGlobals)\n        if (persistentKeys.indexOf(key) === -1)\n            globalState[key] = defaultGlobals[key];\n    globalState.allowStateChanges = !globalState.strictMode;\n}\nfunction addObserver(observable, node) {\n    var obs = observable.observers, l = obs.length;\n    obs[l] = node;\n    if (l === 0)\n        observable.onBecomeObserved();\n}\nfunction removeObserver(observable, node) {\n    var obs = observable.observers, idx = obs.indexOf(node);\n    if (idx !== -1)\n        obs.splice(idx, 1);\n    if (obs.length === 0)\n        observable.onBecomeUnobserved();\n}\nfunction reportObserved(observable) {\n    if (globalState.isTracking === false)\n        return;\n    var derivationStack = globalState.derivationStack;\n    var deps = derivationStack[derivationStack.length - 1].observing;\n    var depslength = deps.length;\n    if (deps[depslength - 1] !== observable && deps[depslength - 2] !== observable)\n        deps[depslength] = observable;\n}\nfunction propagateStaleness(observable) {\n    var os = observable.observers.slice();\n    os.forEach(notifyDependencyStale);\n    observable.staleObservers = observable.staleObservers.concat(os);\n}\nfunction propagateReadiness(observable, valueDidActuallyChange) {\n    observable.staleObservers.splice(0).forEach(function (o) { return notifyDependencyReady(o, valueDidActuallyChange); });\n}\nvar Reaction = (function () {\n    function Reaction(name, onInvalidate) {\n        if (name === void 0) { name = \"Reaction@\" + getNextId(); }\n        this.name = name;\n        this.onInvalidate = onInvalidate;\n        this.staleObservers = EMPTY_ARRAY;\n        this.observers = EMPTY_ARRAY;\n        this.observing = [];\n        this.dependencyChangeCount = 0;\n        this.dependencyStaleCount = 0;\n        this.isDisposed = false;\n        this._isScheduled = false;\n        this._isTrackPending = false;\n        this._isRunning = false;\n    }\n    Reaction.prototype.onBecomeObserved = function () {\n    };\n    Reaction.prototype.onBecomeUnobserved = function () {\n    };\n    Reaction.prototype.onDependenciesReady = function () {\n        this.schedule();\n        return false;\n    };\n    Reaction.prototype.schedule = function () {\n        if (!this._isScheduled) {\n            this._isScheduled = true;\n            globalState.pendingReactions.push(this);\n            runReactions();\n        }\n    };\n    Reaction.prototype.isScheduled = function () {\n        return this.dependencyStaleCount > 0 || this._isScheduled;\n    };\n    Reaction.prototype.runReaction = function () {\n        if (!this.isDisposed) {\n            this._isScheduled = false;\n            this._isTrackPending = true;\n            this.onInvalidate();\n            if (this._isTrackPending && isSpyEnabled()) {\n                spyReport({\n                    object: this,\n                    type: \"scheduled-reaction\"\n                });\n            }\n        }\n    };\n    Reaction.prototype.track = function (fn) {\n        var notify = isSpyEnabled();\n        var startTime;\n        if (notify) {\n            startTime = Date.now();\n            spyReportStart({\n                object: this,\n                type: \"reaction\",\n                fn: fn\n            });\n        }\n        this._isRunning = true;\n        trackDerivedFunction(this, fn);\n        this._isRunning = false;\n        this._isTrackPending = false;\n        if (notify) {\n            spyReportEnd({\n                time: Date.now() - startTime\n            });\n        }\n    };\n    Reaction.prototype.dispose = function () {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            var deps = this.observing.splice(0);\n            for (var i = 0, l = deps.length; i < l; i++)\n                removeObserver(deps[i], this);\n        }\n    };\n    Reaction.prototype.getDisposer = function () {\n        var r = this.dispose.bind(this);\n        r.$mobx = this;\n        return r;\n    };\n    Reaction.prototype.toString = function () {\n        return \"Reaction[\" + this.name + \"]\";\n    };\n    Reaction.prototype.whyRun = function () {\n        var observing = unique(this.observing).map(function (dep) { return dep.name; });\n        return (\"\\nWhyRun? reaction '\" + this.name + \"':\\n * Status: [\" + (this.isDisposed ? \"stopped\" : this._isRunning ? \"running\" : this.isScheduled() ? \"scheduled\" : \"idle\") + \"]\\n * This reaction will re-run if any of the following observables changes:\\n    \" + joinStrings(observing) + \"\\n    \" + ((this._isRunning) ? \" (... or any observable accessed during the remainder of the current run)\" : \"\") + \"\\n\\tMissing items in this list?\\n\\t  1. Check whether all used values are properly marked as observable (use isObservable to verify)\\n\\t  2. Make sure you didn't dereference values too early. MobX observes props, not primitives. E.g: use 'person.name' instead of 'name' in your computation.\\n\");\n    };\n    return Reaction;\n}());\nexports.Reaction = Reaction;\nvar MAX_REACTION_ITERATIONS = 100;\nfunction runReactions() {\n    if (globalState.isRunningReactions === true || globalState.inTransaction > 0)\n        return;\n    globalState.isRunningReactions = true;\n    var allReactions = globalState.pendingReactions;\n    var iterations = 0;\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS)\n            throw new Error(\"Reaction doesn't converge to a stable state. Probably there is a cycle in the reactive function: \" + allReactions[0].toString());\n        var remainingReactions = allReactions.splice(0);\n        for (var i = 0, l = remainingReactions.length; i < l; i++)\n            remainingReactions[i].runReaction();\n    }\n    globalState.isRunningReactions = false;\n}\nvar spyEnabled = false;\nfunction isSpyEnabled() {\n    return spyEnabled;\n}\nfunction spyReport(event) {\n    if (!spyEnabled)\n        return false;\n    var listeners = globalState.spyListeners;\n    for (var i = 0, l = listeners.length; i < l; i++)\n        listeners[i](event);\n}\nfunction spyReportStart(event) {\n    var change = objectAssign({}, event, { spyReportStart: true });\n    spyReport(change);\n}\nvar END_EVENT = { spyReportEnd: true };\nfunction spyReportEnd(change) {\n    if (change)\n        spyReport(objectAssign({}, change, END_EVENT));\n    else\n        spyReport(END_EVENT);\n}\nfunction spy(listener) {\n    globalState.spyListeners.push(listener);\n    spyEnabled = globalState.spyListeners.length > 0;\n    return once(function () {\n        var idx = globalState.spyListeners.indexOf(listener);\n        if (idx !== -1)\n            globalState.spyListeners.splice(idx, 1);\n        spyEnabled = globalState.spyListeners.length > 0;\n    });\n}\nexports.spy = spy;\nfunction trackTransitions(onReport) {\n    deprecated(\"trackTransitions is deprecated. Use mobx.spy instead\");\n    if (typeof onReport === \"boolean\") {\n        deprecated(\"trackTransitions only takes a single callback function. If you are using the mobx-react-devtools, please update them first\");\n        onReport = arguments[1];\n    }\n    if (!onReport) {\n        deprecated(\"trackTransitions without callback has been deprecated and is a no-op now. If you are using the mobx-react-devtools, please update them first\");\n        return function () { };\n    }\n    return spy(onReport);\n}\nfunction transaction(action, thisArg, report) {\n    if (thisArg === void 0) { thisArg = undefined; }\n    if (report === void 0) { report = true; }\n    transactionStart((action.name) || \"anonymous transaction\", thisArg, report);\n    var res = action.call(thisArg);\n    transactionEnd(report);\n    return res;\n}\nexports.transaction = transaction;\nfunction transactionStart(name, thisArg, report) {\n    if (thisArg === void 0) { thisArg = undefined; }\n    if (report === void 0) { report = true; }\n    globalState.inTransaction += 1;\n    if (report && isSpyEnabled()) {\n        spyReportStart({\n            type: \"transaction\",\n            target: thisArg,\n            name: name\n        });\n    }\n}\nfunction transactionEnd(report) {\n    if (report === void 0) { report = true; }\n    if (--globalState.inTransaction === 0) {\n        var values = globalState.changedAtoms.splice(0);\n        for (var i = 0, l = values.length; i < l; i++)\n            propagateAtomReady(values[i]);\n        runReactions();\n    }\n    if (report && isSpyEnabled())\n        spyReportEnd();\n}\nfunction hasInterceptors(interceptable) {\n    return (interceptable.interceptors && interceptable.interceptors.length > 0);\n}\nfunction registerInterceptor(interceptable, handler) {\n    var interceptors = interceptable.interceptors || (interceptable.interceptors = []);\n    interceptors.push(handler);\n    return once(function () {\n        var idx = interceptors.indexOf(handler);\n        if (idx !== -1)\n            interceptors.splice(idx, 1);\n    });\n}\nfunction interceptChange(interceptable, change) {\n    var prevU = untrackedStart();\n    var interceptors = interceptable.interceptors;\n    for (var i = 0, l = interceptors.length; i < l; i++) {\n        change = interceptors[i](change);\n        invariant(!change || change.type, \"Intercept handlers should return nothing or a change object\");\n        if (!change)\n            return null;\n    }\n    untrackedEnd(prevU);\n    return change;\n}\nfunction hasListeners(listenable) {\n    return listenable.changeListeners && listenable.changeListeners.length > 0;\n}\nfunction registerListener(listenable, handler) {\n    var listeners = listenable.changeListeners || (listenable.changeListeners = []);\n    listeners.push(handler);\n    return once(function () {\n        var idx = listeners.indexOf(handler);\n        if (idx !== -1)\n            listeners.splice(idx, 1);\n    });\n}\nfunction notifyListeners(listenable, change) {\n    var prevU = untrackedStart();\n    var listeners = listenable.changeListeners;\n    if (!listeners)\n        return;\n    listeners = listeners.slice();\n    if (Array.isArray(change)) {\n        for (var i = 0, l = listeners.length; i < l; i++)\n            listeners[i].apply(null, change);\n    }\n    else {\n        for (var i = 0, l = listeners.length; i < l; i++)\n            listeners[i](change);\n    }\n    untrackedEnd(prevU);\n}\nvar ValueMode;\n(function (ValueMode) {\n    ValueMode[ValueMode[\"Recursive\"] = 0] = \"Recursive\";\n    ValueMode[ValueMode[\"Reference\"] = 1] = \"Reference\";\n    ValueMode[ValueMode[\"Structure\"] = 2] = \"Structure\";\n    ValueMode[ValueMode[\"Flat\"] = 3] = \"Flat\";\n})(ValueMode || (ValueMode = {}));\nfunction asReference(value) {\n    return new AsReference(value);\n}\nexports.asReference = asReference;\nfunction asStructure(value) {\n    return new AsStructure(value);\n}\nexports.asStructure = asStructure;\nfunction asFlat(value) {\n    return new AsFlat(value);\n}\nexports.asFlat = asFlat;\nvar AsReference = (function () {\n    function AsReference(value) {\n        this.value = value;\n        assertUnwrapped(value, \"Modifiers are not allowed to be nested\");\n    }\n    return AsReference;\n}());\nvar AsStructure = (function () {\n    function AsStructure(value) {\n        this.value = value;\n        assertUnwrapped(value, \"Modifiers are not allowed to be nested\");\n    }\n    return AsStructure;\n}());\nvar AsFlat = (function () {\n    function AsFlat(value) {\n        this.value = value;\n        assertUnwrapped(value, \"Modifiers are not allowed to be nested\");\n    }\n    return AsFlat;\n}());\nfunction asMap(data, modifierFunc) {\n    return map(data, modifierFunc);\n}\nexports.asMap = asMap;\nfunction getValueModeFromValue(value, defaultMode) {\n    if (value instanceof AsReference)\n        return [ValueMode.Reference, value.value];\n    if (value instanceof AsStructure)\n        return [ValueMode.Structure, value.value];\n    if (value instanceof AsFlat)\n        return [ValueMode.Flat, value.value];\n    return [defaultMode, value];\n}\nfunction getValueModeFromModifierFunc(func) {\n    if (func === asReference)\n        return ValueMode.Reference;\n    else if (func === asStructure)\n        return ValueMode.Structure;\n    else if (func === asFlat)\n        return ValueMode.Flat;\n    invariant(func === undefined, \"Cannot determine value mode from function. Please pass in one of these: mobx.asReference, mobx.asStructure or mobx.asFlat, got: \" + func);\n    return ValueMode.Recursive;\n}\nfunction makeChildObservable(value, parentMode, name) {\n    var childMode;\n    if (isObservable(value))\n        return value;\n    switch (parentMode) {\n        case ValueMode.Reference:\n            return value;\n        case ValueMode.Flat:\n            assertUnwrapped(value, \"Items inside 'asFlat' cannot have modifiers\");\n            childMode = ValueMode.Reference;\n            break;\n        case ValueMode.Structure:\n            assertUnwrapped(value, \"Items inside 'asStructure' cannot have modifiers\");\n            childMode = ValueMode.Structure;\n            break;\n        case ValueMode.Recursive:\n            _a = getValueModeFromValue(value, ValueMode.Recursive), childMode = _a[0], value = _a[1];\n            break;\n        default:\n            invariant(false, \"Illegal State\");\n    }\n    if (Array.isArray(value))\n        return createObservableArray(value, childMode, name);\n    if (isPlainObject(value) && Object.isExtensible(value))\n        return extendObservableHelper(value, value, childMode, name);\n    return value;\n    var _a;\n}\nfunction assertUnwrapped(value, message) {\n    if (value instanceof AsReference || value instanceof AsStructure || value instanceof AsFlat)\n        throw new Error(\"[mobx] asStructure / asReference / asFlat cannot be used here. \" + message);\n}\nvar OBSERVABLE_ARRAY_BUFFER_SIZE = 0;\nvar StubArray = (function () {\n    function StubArray() {\n    }\n    return StubArray;\n}());\nStubArray.prototype = [];\nvar ObservableArrayAdministration = (function () {\n    function ObservableArrayAdministration(name, mode, array, owned) {\n        this.mode = mode;\n        this.array = array;\n        this.owned = owned;\n        this.lastKnownLength = 0;\n        this.interceptors = null;\n        this.changeListeners = null;\n        this.atom = new Atom(name || (\"ObservableArray@\" + getNextId()));\n    }\n    ObservableArrayAdministration.prototype.makeReactiveArrayItem = function (value) {\n        assertUnwrapped(value, \"Array values cannot have modifiers\");\n        if (this.mode === ValueMode.Flat || this.mode === ValueMode.Reference)\n            return value;\n        return makeChildObservable(value, this.mode, this.atom.name + \"[..]\");\n    };\n    ObservableArrayAdministration.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    ObservableArrayAdministration.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately === void 0) { fireImmediately = false; }\n        if (fireImmediately) {\n            listener({\n                object: this.array,\n                type: \"splice\",\n                index: 0,\n                added: this.values.slice(),\n                addedCount: this.values.length,\n                removed: [],\n                removedCount: 0\n            });\n        }\n        return registerListener(this, listener);\n    };\n    ObservableArrayAdministration.prototype.getArrayLength = function () {\n        this.atom.reportObserved();\n        return this.values.length;\n    };\n    ObservableArrayAdministration.prototype.setArrayLength = function (newLength) {\n        if (typeof newLength !== \"number\" || newLength < 0)\n            throw new Error(\"[mobx.array] Out of range: \" + newLength);\n        var currentLength = this.values.length;\n        if (newLength === currentLength)\n            return;\n        else if (newLength > currentLength)\n            this.spliceWithArray(currentLength, 0, new Array(newLength - currentLength));\n        else\n            this.spliceWithArray(newLength, currentLength - newLength);\n    };\n    ObservableArrayAdministration.prototype.updateArrayLength = function (oldLength, delta) {\n        if (oldLength !== this.lastKnownLength)\n            throw new Error(\"[mobx] Modification exception: the internal structure of an observable array was changed. Did you use peek() to change it?\");\n        this.lastKnownLength += delta;\n        if (delta > 0 && oldLength + delta > OBSERVABLE_ARRAY_BUFFER_SIZE)\n            reserveArrayBuffer(oldLength + delta);\n    };\n    ObservableArrayAdministration.prototype.spliceWithArray = function (index, deleteCount, newItems) {\n        checkIfStateModificationsAreAllowed();\n        var length = this.values.length;\n        if (index === undefined)\n            index = 0;\n        else if (index > length)\n            index = length;\n        else if (index < 0)\n            index = Math.max(0, length + index);\n        if (arguments.length === 1)\n            deleteCount = length - index;\n        else if (deleteCount === undefined || deleteCount === null)\n            deleteCount = 0;\n        else\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index));\n        if (newItems === undefined)\n            newItems = [];\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                object: this.array,\n                type: \"splice\",\n                index: index,\n                removedCount: deleteCount,\n                added: newItems\n            });\n            if (!change)\n                return EMPTY_ARRAY;\n            deleteCount = change.removedCount;\n            newItems = change.added;\n        }\n        newItems = newItems.map(this.makeReactiveArrayItem, this);\n        var lengthDelta = newItems.length - deleteCount;\n        this.updateArrayLength(length, lengthDelta);\n        var res = (_a = this.values).splice.apply(_a, [index, deleteCount].concat(newItems));\n        if (deleteCount !== 0 || newItems.length !== 0)\n            this.notifyArraySplice(index, newItems, res);\n        return res;\n        var _a;\n    };\n    ObservableArrayAdministration.prototype.notifyArrayChildUpdate = function (index, newValue, oldValue) {\n        var notifySpy = !this.owned && isSpyEnabled();\n        var notify = hasListeners(this);\n        var change = notify || notifySpy ? {\n            object: this.array,\n            type: \"update\",\n            index: index, newValue: newValue, oldValue: oldValue\n        } : null;\n        if (notifySpy)\n            spyReportStart(change);\n        this.atom.reportChanged();\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy)\n            spyReportEnd();\n    };\n    ObservableArrayAdministration.prototype.notifyArraySplice = function (index, added, removed) {\n        var notifySpy = !this.owned && isSpyEnabled();\n        var notify = hasListeners(this);\n        var change = notify || notifySpy ? {\n            object: this.array,\n            type: \"splice\",\n            index: index, removed: removed, added: added,\n            removedCount: removed.length,\n            addedCount: added.length\n        } : null;\n        if (notifySpy)\n            spyReportStart(change);\n        this.atom.reportChanged();\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy)\n            spyReportEnd();\n    };\n    return ObservableArrayAdministration;\n}());\nvar ObservableArray = (function (_super) {\n    __extends(ObservableArray, _super);\n    function ObservableArray(initialValues, mode, name, owned) {\n        if (owned === void 0) { owned = false; }\n        _super.call(this);\n        var adm = new ObservableArrayAdministration(name, mode, this, owned);\n        Object.defineProperty(this, \"$mobx\", {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: adm\n        });\n        if (initialValues && initialValues.length) {\n            adm.updateArrayLength(0, initialValues.length);\n            adm.values = initialValues.map(adm.makeReactiveArrayItem, adm);\n            adm.notifyArraySplice(0, adm.values.slice(), EMPTY_ARRAY);\n        }\n        else {\n            adm.values = [];\n        }\n    }\n    ObservableArray.prototype.intercept = function (handler) {\n        return this.$mobx.intercept(handler);\n    };\n    ObservableArray.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately === void 0) { fireImmediately = false; }\n        return this.$mobx.observe(listener, fireImmediately);\n    };\n    ObservableArray.prototype.clear = function () {\n        return this.splice(0);\n    };\n    ObservableArray.prototype.replace = function (newItems) {\n        return this.$mobx.spliceWithArray(0, this.$mobx.values.length, newItems);\n    };\n    ObservableArray.prototype.toJS = function () {\n        return this.slice();\n    };\n    ObservableArray.prototype.toJSON = function () {\n        return this.toJS();\n    };\n    ObservableArray.prototype.peek = function () {\n        return this.$mobx.values;\n    };\n    ObservableArray.prototype.find = function (predicate, thisArg, fromIndex) {\n        if (fromIndex === void 0) { fromIndex = 0; }\n        this.$mobx.atom.reportObserved();\n        var items = this.$mobx.values, l = items.length;\n        for (var i = fromIndex; i < l; i++)\n            if (predicate.call(thisArg, items[i], i, this))\n                return items[i];\n        return null;\n    };\n    ObservableArray.prototype.splice = function (index, deleteCount) {\n        var newItems = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            newItems[_i - 2] = arguments[_i];\n        }\n        switch (arguments.length) {\n            case 0:\n                return [];\n            case 1:\n                return this.$mobx.spliceWithArray(index);\n            case 2:\n                return this.$mobx.spliceWithArray(index, deleteCount);\n        }\n        return this.$mobx.spliceWithArray(index, deleteCount, newItems);\n    };\n    ObservableArray.prototype.push = function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i - 0] = arguments[_i];\n        }\n        var adm = this.$mobx;\n        adm.spliceWithArray(adm.values.length, 0, items);\n        return adm.values.length;\n    };\n    ObservableArray.prototype.pop = function () {\n        return this.splice(Math.max(this.$mobx.values.length - 1, 0), 1)[0];\n    };\n    ObservableArray.prototype.shift = function () {\n        return this.splice(0, 1)[0];\n    };\n    ObservableArray.prototype.unshift = function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i - 0] = arguments[_i];\n        }\n        var adm = this.$mobx;\n        adm.spliceWithArray(0, 0, items);\n        return adm.values.length;\n    };\n    ObservableArray.prototype.reverse = function () {\n        this.$mobx.atom.reportObserved();\n        var clone = this.slice();\n        return clone.reverse.apply(clone, arguments);\n    };\n    ObservableArray.prototype.sort = function (compareFn) {\n        this.$mobx.atom.reportObserved();\n        var clone = this.slice();\n        return clone.sort.apply(clone, arguments);\n    };\n    ObservableArray.prototype.remove = function (value) {\n        var idx = this.$mobx.values.indexOf(value);\n        if (idx > -1) {\n            this.splice(idx, 1);\n            return true;\n        }\n        return false;\n    };\n    ObservableArray.prototype.toString = function () {\n        return \"[mobx.array] \" + Array.prototype.toString.apply(this.$mobx.values, arguments);\n    };\n    ObservableArray.prototype.toLocaleString = function () {\n        return \"[mobx.array] \" + Array.prototype.toLocaleString.apply(this.$mobx.values, arguments);\n    };\n    return ObservableArray;\n}(StubArray));\nmakeNonEnumerable(ObservableArray.prototype, [\n    \"constructor\",\n    \"observe\",\n    \"clear\",\n    \"replace\",\n    \"toJSON\",\n    \"peek\",\n    \"find\",\n    \"splice\",\n    \"push\",\n    \"pop\",\n    \"shift\",\n    \"unshift\",\n    \"reverse\",\n    \"sort\",\n    \"remove\",\n    \"toString\",\n    \"toLocaleString\"\n]);\nObject.defineProperty(ObservableArray.prototype, \"length\", {\n    enumerable: false,\n    configurable: true,\n    get: function () {\n        return this.$mobx.getArrayLength();\n    },\n    set: function (newLength) {\n        this.$mobx.setArrayLength(newLength);\n    }\n});\n[\n    \"concat\",\n    \"every\",\n    \"filter\",\n    \"forEach\",\n    \"indexOf\",\n    \"join\",\n    \"lastIndexOf\",\n    \"map\",\n    \"reduce\",\n    \"reduceRight\",\n    \"slice\",\n    \"some\"\n].forEach(function (funcName) {\n    var baseFunc = Array.prototype[funcName];\n    Object.defineProperty(ObservableArray.prototype, funcName, {\n        configurable: false,\n        writable: true,\n        enumerable: false,\n        value: function () {\n            this.$mobx.atom.reportObserved();\n            return baseFunc.apply(this.$mobx.values, arguments);\n        }\n    });\n});\nfunction createArrayBufferItem(index) {\n    Object.defineProperty(ObservableArray.prototype, \"\" + index, {\n        enumerable: false,\n        configurable: false,\n        set: createArraySetter(index),\n        get: createArrayGetter(index)\n    });\n}\nfunction createArraySetter(index) {\n    return function (newValue) {\n        var adm = this.$mobx;\n        var values = adm.values;\n        assertUnwrapped(newValue, \"Modifiers cannot be used on array values. For non-reactive array values use makeReactive(asFlat(array)).\");\n        if (index < values.length) {\n            checkIfStateModificationsAreAllowed();\n            var oldValue = values[index];\n            if (hasInterceptors(adm)) {\n                var change = interceptChange(adm, {\n                    type: \"update\",\n                    object: adm.array,\n                    index: index, newValue: newValue\n                });\n                if (!change)\n                    return;\n                newValue = change.newValue;\n            }\n            newValue = adm.makeReactiveArrayItem(newValue);\n            var changed = (adm.mode === ValueMode.Structure) ? !deepEquals(oldValue, newValue) : oldValue !== newValue;\n            if (changed) {\n                values[index] = newValue;\n                adm.notifyArrayChildUpdate(index, newValue, oldValue);\n            }\n        }\n        else if (index === values.length) {\n            adm.spliceWithArray(index, 0, [newValue]);\n        }\n        else\n            throw new Error(\"[mobx.array] Index out of bounds, \" + index + \" is larger than \" + values.length);\n    };\n}\nfunction createArrayGetter(index) {\n    return function () {\n        var impl = this.$mobx;\n        if (impl && index < impl.values.length) {\n            impl.atom.reportObserved();\n            return impl.values[index];\n        }\n        return undefined;\n    };\n}\nfunction reserveArrayBuffer(max) {\n    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max; index++)\n        createArrayBufferItem(index);\n    OBSERVABLE_ARRAY_BUFFER_SIZE = max;\n}\nreserveArrayBuffer(1000);\nfunction createObservableArray(initialValues, mode, name) {\n    return new ObservableArray(initialValues, mode, name);\n}\nfunction fastArray(initialValues) {\n    deprecated(\"fastArray is deprecated. Please use `observable(asFlat([]))`\");\n    return createObservableArray(initialValues, ValueMode.Flat, null);\n}\nexports.fastArray = fastArray;\nfunction isObservableArray(thing) {\n    return thing instanceof ObservableArray;\n}\nexports.isObservableArray = isObservableArray;\nvar ObservableMapMarker = {};\nvar ObservableMap = (function () {\n    function ObservableMap(initialData, valueModeFunc) {\n        var _this = this;\n        this.$mobx = ObservableMapMarker;\n        this._data = {};\n        this._hasMap = {};\n        this.name = \"ObservableMap@\" + getNextId();\n        this._keys = new ObservableArray(null, ValueMode.Reference, this.name + \".keys()\", true);\n        this.interceptors = null;\n        this.changeListeners = null;\n        this._valueMode = getValueModeFromModifierFunc(valueModeFunc);\n        if (this._valueMode === ValueMode.Flat)\n            this._valueMode = ValueMode.Reference;\n        allowStateChanges(true, function () {\n            if (isPlainObject(initialData))\n                _this.merge(initialData);\n            else if (Array.isArray(initialData))\n                initialData.forEach(function (_a) {\n                    var key = _a[0], value = _a[1];\n                    return _this.set(key, value);\n                });\n        });\n    }\n    ObservableMap.prototype._has = function (key) {\n        return typeof this._data[key] !== \"undefined\";\n    };\n    ObservableMap.prototype.has = function (key) {\n        if (!this.isValidKey(key))\n            return false;\n        key = \"\" + key;\n        if (this._hasMap[key])\n            return this._hasMap[key].get();\n        return this._updateHasMapEntry(key, false).get();\n    };\n    ObservableMap.prototype.set = function (key, value) {\n        this.assertValidKey(key);\n        key = \"\" + key;\n        var hasKey = this._has(key);\n        assertUnwrapped(value, \"[mobx.map.set] Expected unwrapped value to be inserted to key '\" + key + \"'. If you need to use modifiers pass them as second argument to the constructor\");\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: hasKey ? \"update\" : \"add\",\n                object: this,\n                newValue: value,\n                name: key\n            });\n            if (!change)\n                return;\n            value = change.newValue;\n        }\n        if (hasKey) {\n            this._updateValue(key, value);\n        }\n        else {\n            this._addValue(key, value);\n        }\n    };\n    ObservableMap.prototype.delete = function (key) {\n        var _this = this;\n        this.assertValidKey(key);\n        key = \"\" + key;\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, {\n                type: \"delete\",\n                object: this,\n                name: key\n            });\n            if (!change)\n                return;\n        }\n        if (this._has(key)) {\n            var notifySpy = isSpyEnabled();\n            var notify = hasListeners(this);\n            var change = notify || notifySpy ? {\n                type: \"delete\",\n                object: this,\n                oldValue: this._data[key].value,\n                name: key\n            } : null;\n            if (notifySpy)\n                spyReportStart(change);\n            transaction(function () {\n                _this._keys.remove(key);\n                _this._updateHasMapEntry(key, false);\n                var observable = _this._data[key];\n                observable.setNewValue(undefined);\n                _this._data[key] = undefined;\n            }, undefined, false);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy)\n                spyReportEnd();\n        }\n    };\n    ObservableMap.prototype._updateHasMapEntry = function (key, value) {\n        var entry = this._hasMap[key];\n        if (entry) {\n            entry.setNewValue(value);\n        }\n        else {\n            entry = this._hasMap[key] = new ObservableValue(value, ValueMode.Reference, this.name + \".\" + key + \"?\", false);\n        }\n        return entry;\n    };\n    ObservableMap.prototype._updateValue = function (name, newValue) {\n        var observable = this._data[name];\n        newValue = observable.prepareNewValue(newValue);\n        if (newValue !== UNCHANGED) {\n            var notifySpy = isSpyEnabled();\n            var notify = hasListeners(this);\n            var change = notify || notifySpy ? {\n                type: \"update\",\n                object: this,\n                oldValue: observable.value,\n                name: name, newValue: newValue\n            } : null;\n            if (notifySpy)\n                spyReportStart(change);\n            observable.setNewValue(newValue);\n            if (notify)\n                notifyListeners(this, change);\n            if (notifySpy)\n                spyReportEnd();\n        }\n    };\n    ObservableMap.prototype._addValue = function (name, newValue) {\n        var _this = this;\n        transaction(function () {\n            var observable = _this._data[name] = new ObservableValue(newValue, _this._valueMode, _this.name + \".\" + name, false);\n            newValue = observable.value;\n            _this._updateHasMapEntry(name, true);\n            _this._keys.push(name);\n        }, undefined, false);\n        var notifySpy = isSpyEnabled();\n        var notify = hasListeners(this);\n        var change = notify || notifySpy ? {\n            type: \"add\",\n            object: this,\n            name: name, newValue: newValue\n        } : null;\n        if (notifySpy)\n            spyReportStart(change);\n        if (notify)\n            notifyListeners(this, change);\n        if (notifySpy)\n            spyReportEnd();\n    };\n    ObservableMap.prototype.get = function (key) {\n        key = \"\" + key;\n        if (this.has(key))\n            return this._data[key].get();\n        return undefined;\n    };\n    ObservableMap.prototype.keys = function () {\n        return this._keys.slice();\n    };\n    ObservableMap.prototype.values = function () {\n        return this.keys().map(this.get, this);\n    };\n    ObservableMap.prototype.entries = function () {\n        var _this = this;\n        return this.keys().map(function (key) { return [key, _this.get(key)]; });\n    };\n    ObservableMap.prototype.forEach = function (callback, thisArg) {\n        var _this = this;\n        this.keys().forEach(function (key) { return callback.call(thisArg, _this.get(key), key); });\n    };\n    ObservableMap.prototype.merge = function (other) {\n        var _this = this;\n        transaction(function () {\n            if (other instanceof ObservableMap)\n                other.keys().forEach(function (key) { return _this.set(key, other.get(key)); });\n            else\n                Object.keys(other).forEach(function (key) { return _this.set(key, other[key]); });\n        }, undefined, false);\n        return this;\n    };\n    ObservableMap.prototype.clear = function () {\n        var _this = this;\n        transaction(function () {\n            untracked(function () {\n                _this.keys().forEach(_this.delete, _this);\n            });\n        }, undefined, false);\n    };\n    Object.defineProperty(ObservableMap.prototype, \"size\", {\n        get: function () {\n            return this._keys.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ObservableMap.prototype.toJS = function () {\n        var _this = this;\n        var res = {};\n        this.keys().forEach(function (key) { return res[key] = _this.get(key); });\n        return res;\n    };\n    ObservableMap.prototype.toJs = function () {\n        deprecated(\"toJs is deprecated, use toJS instead\");\n        return this.toJS();\n    };\n    ObservableMap.prototype.toJSON = function () {\n        return this.toJS();\n    };\n    ObservableMap.prototype.isValidKey = function (key) {\n        if (key === null || key === undefined)\n            return false;\n        if (typeof key !== \"string\" && typeof key !== \"number\" && typeof key !== \"boolean\")\n            return false;\n        return true;\n    };\n    ObservableMap.prototype.assertValidKey = function (key) {\n        if (!this.isValidKey(key))\n            throw new Error(\"[mobx.map] Invalid key: '\" + key + \"'\");\n    };\n    ObservableMap.prototype.toString = function () {\n        var _this = this;\n        return this.name + \"[{ \" + this.keys().map(function (key) { return (key + \": \" + (\"\" + _this.get(key))); }).join(\", \") + \" }]\";\n    };\n    ObservableMap.prototype.observe = function (listener, fireImmediately) {\n        invariant(fireImmediately !== true, \"`observe` doesn't support the fire immediately property for observable maps.\");\n        return registerListener(this, listener);\n    };\n    ObservableMap.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    return ObservableMap;\n}());\nexports.ObservableMap = ObservableMap;\nfunction map(initialValues, valueModifier) {\n    return new ObservableMap(initialValues, valueModifier);\n}\nexports.map = map;\nfunction isObservableMap(thing) {\n    return thing instanceof ObservableMap;\n}\nexports.isObservableMap = isObservableMap;\nvar ObservableObjectAdministration = (function () {\n    function ObservableObjectAdministration(target, name, mode) {\n        this.target = target;\n        this.name = name;\n        this.mode = mode;\n        this.values = {};\n        this.changeListeners = null;\n        this.interceptors = null;\n    }\n    ObservableObjectAdministration.prototype.observe = function (callback, fireImmediately) {\n        invariant(fireImmediately !== true, \"`observe` doesn't support the fire immediately property for observable objects.\");\n        return registerListener(this, callback);\n    };\n    ObservableObjectAdministration.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    return ObservableObjectAdministration;\n}());\nfunction asObservableObject(target, name, mode) {\n    if (mode === void 0) { mode = ValueMode.Recursive; }\n    if (isObservableObject(target))\n        return target.$mobx;\n    if (!isPlainObject(target))\n        name = target.constructor.name + \"@\" + getNextId();\n    if (!name)\n        name = \"ObservableObject@\" + getNextId();\n    var adm = new ObservableObjectAdministration(target, name, mode);\n    Object.defineProperty(target, \"$mobx\", {\n        enumerable: false,\n        configurable: false,\n        writable: false,\n        value: adm\n    });\n    return adm;\n}\nfunction setObservableObjectInstanceProperty(adm, propName, value) {\n    if (adm.values[propName])\n        adm.target[propName] = value;\n    else\n        defineObservableProperty(adm, propName, value, true);\n}\nfunction defineObservableProperty(adm, propName, newValue, asInstanceProperty) {\n    if (asInstanceProperty)\n        assertPropertyConfigurable(adm.target, propName);\n    var observable;\n    var name = adm.name + \".\" + propName;\n    var isComputed = true;\n    if (typeof newValue === \"function\" && newValue.length === 0 && !isAction(newValue))\n        observable = new ComputedValue(newValue, adm.target, false, name);\n    else if (newValue instanceof AsStructure && typeof newValue.value === \"function\" && newValue.value.length === 0)\n        observable = new ComputedValue(newValue.value, adm.target, true, name);\n    else {\n        isComputed = false;\n        if (hasInterceptors(adm)) {\n            var change = interceptChange(adm, {\n                object: adm.target,\n                name: propName,\n                type: \"add\",\n                newValue: newValue\n            });\n            if (!change)\n                return;\n            newValue = change.newValue;\n        }\n        observable = new ObservableValue(newValue, adm.mode, name, false);\n        newValue = observable.value;\n    }\n    adm.values[propName] = observable;\n    if (asInstanceProperty) {\n        Object.defineProperty(adm.target, propName, {\n            configurable: true,\n            enumerable: !isComputed,\n            get: function () {\n                return observable.get();\n            },\n            set: isComputed\n                ? throwingComputedValueSetter\n                : function (v) {\n                    setPropertyValue(this, propName, v);\n                }\n        });\n    }\n    if (!isComputed)\n        notifyPropertyAddition(adm, adm.target, propName, newValue);\n}\nfunction setPropertyValue(instance, name, newValue) {\n    var adm = instance.$mobx;\n    var observable = instance.$mobx.values[name];\n    if (hasInterceptors(adm)) {\n        var change = interceptChange(adm, {\n            type: \"update\",\n            object: instance,\n            name: name, newValue: newValue\n        });\n        if (!change)\n            return;\n        newValue = change.newValue;\n    }\n    newValue = observable.prepareNewValue(newValue);\n    if (newValue !== UNCHANGED) {\n        var notify = hasListeners(adm);\n        var notifySpy = isSpyEnabled();\n        var change = notifyListeners || hasListeners ? {\n            type: \"update\",\n            object: instance,\n            oldValue: observable.value,\n            name: name, newValue: newValue\n        } : null;\n        if (notifySpy)\n            spyReportStart(change);\n        observable.setNewValue(newValue);\n        if (notify)\n            notifyListeners(adm, change);\n        if (notifySpy)\n            spyReportEnd();\n    }\n}\nfunction notifyPropertyAddition(adm, object, name, newValue) {\n    var notify = hasListeners(adm);\n    var notifySpy = isSpyEnabled();\n    var change = notify || notifySpy ? {\n        type: \"add\",\n        object: object, name: name, newValue: newValue\n    } : null;\n    if (notifySpy)\n        spyReportStart(change);\n    if (notify)\n        notifyListeners(adm, change);\n    if (notifySpy)\n        spyReportEnd();\n}\nfunction isObservableObject(thing) {\n    if (typeof thing === \"object\" && thing !== null) {\n        runLazyInitializers(thing);\n        return thing.$mobx instanceof ObservableObjectAdministration;\n    }\n    return false;\n}\nexports.isObservableObject = isObservableObject;\nvar UNCHANGED = {};\nvar ObservableValue = (function (_super) {\n    __extends(ObservableValue, _super);\n    function ObservableValue(value, mode, name, notifySpy) {\n        if (name === void 0) { name = \"ObservableValue@\" + getNextId(); }\n        if (notifySpy === void 0) { notifySpy = true; }\n        _super.call(this, name);\n        this.mode = mode;\n        this.hasUnreportedChange = false;\n        this.value = undefined;\n        var _a = getValueModeFromValue(value, ValueMode.Recursive), childmode = _a[0], unwrappedValue = _a[1];\n        if (this.mode === ValueMode.Recursive)\n            this.mode = childmode;\n        this.value = makeChildObservable(unwrappedValue, this.mode, this.name);\n        if (notifySpy && isSpyEnabled()) {\n            spyReport({ type: \"create\", object: this, newValue: this.value });\n        }\n    }\n    ObservableValue.prototype.set = function (newValue) {\n        var oldValue = this.value;\n        newValue = this.prepareNewValue(newValue);\n        if (newValue !== UNCHANGED) {\n            var notifySpy = isSpyEnabled();\n            if (notifySpy) {\n                spyReportStart({\n                    type: \"update\",\n                    object: this,\n                    newValue: newValue, oldValue: oldValue\n                });\n            }\n            this.setNewValue(newValue);\n            if (notifySpy)\n                spyReportEnd();\n        }\n    };\n    ObservableValue.prototype.prepareNewValue = function (newValue) {\n        assertUnwrapped(newValue, \"Modifiers cannot be used on non-initial values.\");\n        checkIfStateModificationsAreAllowed();\n        if (hasInterceptors(this)) {\n            var change = interceptChange(this, { object: this, type: \"update\", newValue: newValue });\n            if (!change)\n                return UNCHANGED;\n            newValue = change.newValue;\n        }\n        var changed = valueDidChange(this.mode === ValueMode.Structure, this.value, newValue);\n        if (changed)\n            return makeChildObservable(newValue, this.mode, this.name);\n        return UNCHANGED;\n    };\n    ObservableValue.prototype.setNewValue = function (newValue) {\n        var oldValue = this.value;\n        this.value = newValue;\n        this.reportChanged();\n        if (hasListeners(this))\n            notifyListeners(this, [newValue, oldValue]);\n    };\n    ObservableValue.prototype.get = function () {\n        this.reportObserved();\n        return this.value;\n    };\n    ObservableValue.prototype.intercept = function (handler) {\n        return registerInterceptor(this, handler);\n    };\n    ObservableValue.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately)\n            listener(this.value, undefined);\n        return registerListener(this, listener);\n    };\n    ObservableValue.prototype.toJSON = function () {\n        return this.get();\n    };\n    ObservableValue.prototype.toString = function () {\n        return this.name + \"[\" + this.value + \"]\";\n    };\n    return ObservableValue;\n}(Atom));\nfunction getAtom(thing, property) {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray(thing)) {\n            invariant(property === undefined, \"It is not possible to get index atoms from arrays\");\n            return thing.$mobx.atom;\n        }\n        if (isObservableMap(thing)) {\n            if (property === undefined)\n                return getAtom(thing._keys);\n            var observable_1 = thing._data[property] || thing._hasMap[property];\n            invariant(!!observable_1, \"the entry '\" + property + \"' does not exist in the observable map '\" + getDebugName(thing) + \"'\");\n            return observable_1;\n        }\n        runLazyInitializers(thing);\n        if (isObservableObject(thing)) {\n            invariant(!!property, \"please specify a property\");\n            var observable_2 = thing.$mobx.values[property];\n            invariant(!!observable_2, \"no observable property '\" + property + \"' found on the observable object '\" + getDebugName(thing) + \"'\");\n            return observable_2;\n        }\n        if (thing instanceof Atom || thing instanceof ComputedValue || thing instanceof Reaction) {\n            return thing;\n        }\n    }\n    else if (typeof thing === \"function\") {\n        if (thing.$mobx instanceof Reaction) {\n            return thing.$mobx;\n        }\n    }\n    invariant(false, \"Cannot obtain atom from \" + thing);\n}\nfunction getAdministration(thing, property) {\n    invariant(thing, \"Expection some object\");\n    if (property !== undefined)\n        return getAdministration(getAtom(thing, property));\n    if (thing instanceof Atom || thing instanceof ComputedValue || thing instanceof Reaction)\n        return thing;\n    if (isObservableMap(thing))\n        return thing;\n    runLazyInitializers(thing);\n    if (thing.$mobx)\n        return thing.$mobx;\n    invariant(false, \"Cannot obtain administration from \" + thing);\n}\nfunction getDebugName(thing, property) {\n    var named;\n    if (property !== undefined)\n        named = getAtom(thing, property);\n    else if (isObservableObject(thing) || isObservableMap(thing))\n        named = getAdministration(thing);\n    else\n        named = getAtom(thing);\n    return named.name;\n}\nfunction createClassPropertyDecorator(onInitialize, get, set, enumerable, allowCustomArguments) {\n    function classPropertyDecorator(target, key, descriptor, customArgs) {\n        invariant(allowCustomArguments || quacksLikeADecorator(arguments), \"This function is a decorator, but it wasn't invoked like a decorator\");\n        if (!descriptor) {\n            return {\n                enumerable: enumerable,\n                configurable: true,\n                get: function () {\n                    if (!this.__mobxInitializedProps || this.__mobxInitializedProps[key] !== true)\n                        typescriptInitializeProperty(this, key, undefined, onInitialize, customArgs, descriptor);\n                    return get.call(this, key);\n                },\n                set: function (v) {\n                    if (!this.__mobxInitializedProps || this.__mobxInitializedProps[key] !== true) {\n                        typescriptInitializeProperty(this, key, v, onInitialize, customArgs, descriptor);\n                    }\n                    else {\n                        set.call(this, key, v);\n                    }\n                }\n            };\n        }\n        else {\n            if (!target.hasOwnProperty(\"__mobxLazyInitializers\")) {\n                Object.defineProperty(target, \"__mobxLazyInitializers\", {\n                    writable: false, configurable: false, enumerable: false,\n                    value: (target.__mobxLazyInitializers && target.__mobxLazyInitializers.slice()) || []\n                });\n            }\n            var value_1 = descriptor.value, initializer_1 = descriptor.initializer;\n            target.__mobxLazyInitializers.push(function (instance) {\n                onInitialize(instance, key, (initializer_1 ? initializer_1.call(instance) : value_1), customArgs, descriptor);\n            });\n            return {\n                enumerable: enumerable, configurable: true,\n                get: function () {\n                    if (this.__mobxDidRunLazyInitializers !== true)\n                        runLazyInitializers(this);\n                    return get.call(this, key);\n                },\n                set: function (v) {\n                    if (this.__mobxDidRunLazyInitializers !== true)\n                        runLazyInitializers(this);\n                    set.call(this, key, v);\n                }\n            };\n        }\n    }\n    if (allowCustomArguments) {\n        return function () {\n            if (quacksLikeADecorator(arguments))\n                return classPropertyDecorator.apply(null, arguments);\n            var outerArgs = arguments;\n            return function (target, key, descriptor) { return classPropertyDecorator(target, key, descriptor, outerArgs); };\n        };\n    }\n    return classPropertyDecorator;\n}\nfunction typescriptInitializeProperty(instance, key, v, onInitialize, customArgs, baseDescriptor) {\n    if (!instance.hasOwnProperty(\"__mobxInitializedProps\")) {\n        Object.defineProperty(instance, \"__mobxInitializedProps\", {\n            enumerable: false, configurable: false, writable: true,\n            value: {}\n        });\n    }\n    instance.__mobxInitializedProps[key] = true;\n    onInitialize(instance, key, v, customArgs, baseDescriptor);\n}\nfunction runLazyInitializers(instance) {\n    if (instance.__mobxDidRunLazyInitializers === true)\n        return;\n    if (instance.__mobxLazyInitializers) {\n        Object.defineProperty(instance, \"__mobxDidRunLazyInitializers\", {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: true\n        });\n        instance.__mobxDidRunLazyInitializers && instance.__mobxLazyInitializers.forEach(function (initializer) { return initializer(instance); });\n    }\n}\nfunction quacksLikeADecorator(args) {\n    return (args.length === 2 || args.length === 3) && typeof args[1] === \"string\";\n}\nvar SimpleEventEmitter = (function () {\n    function SimpleEventEmitter() {\n        this.listeners = [];\n        deprecated(\"extras.SimpleEventEmitter is deprecated and will be removed in the next major release\");\n    }\n    SimpleEventEmitter.prototype.emit = function () {\n        var listeners = this.listeners.slice();\n        for (var i = 0, l = listeners.length; i < l; i++)\n            listeners[i].apply(null, arguments);\n    };\n    SimpleEventEmitter.prototype.on = function (listener) {\n        var _this = this;\n        this.listeners.push(listener);\n        return once(function () {\n            var idx = _this.listeners.indexOf(listener);\n            if (idx !== -1)\n                _this.listeners.splice(idx, 1);\n        });\n    };\n    SimpleEventEmitter.prototype.once = function (listener) {\n        var subscription = this.on(function () {\n            subscription();\n            listener.apply(this, arguments);\n        });\n        return subscription;\n    };\n    return SimpleEventEmitter;\n}());\nexports.SimpleEventEmitter = SimpleEventEmitter;\nvar EMPTY_ARRAY = [];\nObject.freeze(EMPTY_ARRAY);\nfunction getNextId() {\n    return ++globalState.mobxGuid;\n}\nfunction invariant(check, message, thing) {\n    if (!check)\n        throw new Error(\"[mobx] Invariant failed: \" + message + (thing ? \" in '\" + thing + \"'\" : \"\"));\n}\nvar deprecatedMessages = [];\nfunction deprecated(msg) {\n    if (deprecatedMessages.indexOf(msg) !== -1)\n        return;\n    deprecatedMessages.push(msg);\n    console.error(\"[mobx] Deprecated: \" + msg);\n}\nfunction once(func) {\n    var invoked = false;\n    return function () {\n        if (invoked)\n            return;\n        invoked = true;\n        return func.apply(this, arguments);\n    };\n}\nvar noop = function () { };\nfunction unique(list) {\n    var res = [];\n    list.forEach(function (item) {\n        if (res.indexOf(item) === -1)\n            res.push(item);\n    });\n    return res;\n}\nfunction joinStrings(things, limit, separator) {\n    if (limit === void 0) { limit = 100; }\n    if (separator === void 0) { separator = \" - \"; }\n    if (!things)\n        return \"\";\n    var sliced = things.slice(0, limit);\n    return \"\" + sliced.join(separator) + (things.length > limit ? \" (... and \" + (things.length - limit) + \"more)\" : \"\");\n}\nfunction isPlainObject(value) {\n    return value !== null && typeof value === \"object\" && Object.getPrototypeOf(value) === Object.prototype;\n}\nfunction objectAssign() {\n    var res = arguments[0];\n    for (var i = 1, l = arguments.length; i < l; i++) {\n        var source = arguments[i];\n        for (var key in source)\n            if (source.hasOwnProperty(key)) {\n                res[key] = source[key];\n            }\n    }\n    return res;\n}\nfunction valueDidChange(compareStructural, oldValue, newValue) {\n    return compareStructural\n        ? !deepEquals(oldValue, newValue)\n        : oldValue !== newValue;\n}\nfunction makeNonEnumerable(object, props) {\n    for (var i = 0; i < props.length; i++) {\n        Object.defineProperty(object, props[i], {\n            configurable: true,\n            writable: true,\n            enumerable: false,\n            value: object[props[i]]\n        });\n    }\n}\nfunction isPropertyConfigurable(object, prop) {\n    var descriptor = Object.getOwnPropertyDescriptor(object, prop);\n    return !descriptor || (descriptor.configurable !== false && descriptor.writable !== false);\n}\nfunction assertPropertyConfigurable(object, prop) {\n    invariant(isPropertyConfigurable(object, prop), \"Cannot make property '\" + prop + \"' observable, it is not configurable and writable in the target object\");\n}\nfunction getEnumerableKeys(obj) {\n    var res = [];\n    for (var key in obj)\n        res.push(key);\n    return res;\n}\nfunction deepEquals(a, b) {\n    if (a === null && b === null)\n        return true;\n    if (a === undefined && b === undefined)\n        return true;\n    var aIsArray = Array.isArray(a) || isObservableArray(a);\n    if (aIsArray !== (Array.isArray(b) || isObservableArray(b))) {\n        return false;\n    }\n    else if (aIsArray) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = a.length; i >= 0; i--)\n            if (!deepEquals(a[i], b[i]))\n                return false;\n        return true;\n    }\n    else if (typeof a === \"object\" && typeof b === \"object\") {\n        if (a === null || b === null)\n            return false;\n        if (getEnumerableKeys(a).length !== getEnumerableKeys(b).length)\n            return false;\n        for (var prop in a) {\n            if (!(prop in b))\n                return false;\n            if (!deepEquals(a[prop], b[prop]))\n                return false;\n        }\n        return true;\n    }\n    return a === b;\n}\nfunction quickDiff(current, base) {\n    if (!base || !base.length)\n        return [current, []];\n    if (!current || !current.length)\n        return [[], base];\n    var added = [];\n    var removed = [];\n    var currentIndex = 0, currentSearch = 0, currentLength = current.length, currentExhausted = false, baseIndex = 0, baseSearch = 0, baseLength = base.length, isSearching = false, baseExhausted = false;\n    while (!baseExhausted && !currentExhausted) {\n        if (!isSearching) {\n            if (currentIndex < currentLength && baseIndex < baseLength && current[currentIndex] === base[baseIndex]) {\n                currentIndex++;\n                baseIndex++;\n                if (currentIndex === currentLength && baseIndex === baseLength)\n                    return [added, removed];\n                continue;\n            }\n            currentSearch = currentIndex;\n            baseSearch = baseIndex;\n            isSearching = true;\n        }\n        baseSearch += 1;\n        currentSearch += 1;\n        if (baseSearch >= baseLength)\n            baseExhausted = true;\n        if (currentSearch >= currentLength)\n            currentExhausted = true;\n        if (!currentExhausted && current[currentSearch] === base[baseIndex]) {\n            added = added.concat(current.slice(currentIndex, currentSearch));\n            currentIndex = currentSearch + 1;\n            baseIndex++;\n            isSearching = false;\n        }\n        else if (!baseExhausted && base[baseSearch] === current[currentIndex]) {\n            removed = removed.concat(base.slice(baseIndex, baseSearch));\n            baseIndex = baseSearch + 1;\n            currentIndex++;\n            isSearching = false;\n        }\n    }\n    return [\n        added.concat(current.slice(currentIndex)),\n        removed.concat(base.slice(baseIndex))\n    ];\n}\nvar _a;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mobx/lib/mobx.js\n ** module id = 169\n ** module chunks = 1 2 3 4 5\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar React = require(\"react\");\r\nvar SelectPaymentTerm = (function (_super) {\r\n    __extends(SelectPaymentTerm, _super);\r\n    function SelectPaymentTerm() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    SelectPaymentTerm.prototype.render = function () {\r\n        var options = [];\r\n        var options = [];\r\n        options.push(React.createElement(\"option\", {key: \"1\", value: \"1\"}, \" Payment Term #1 \"));\r\n        options.push(React.createElement(\"option\", {key: \"2\", value: \"2\"}, \" Payment Term #2 \"));\r\n        options.push(React.createElement(\"option\", {key: \"3\", value: \"3\"}, \" Payment Term #3 \"));\r\n        return (React.createElement(\"select\", null, options));\r\n    };\r\n    return SelectPaymentTerm;\r\n}(React.Component));\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = SelectPaymentTerm;\r\n//# sourceMappingURL=SelectPaymentTerm.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wwwroot/libs/tsxbuild/Shared/Components/SelectPaymentTerm.js\n ** module id = 171\n ** module chunks = 1 2 3 4 5\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar React = require(\"react\");\r\nvar SelectLineItem = (function (_super) {\r\n    __extends(SelectLineItem, _super);\r\n    function SelectLineItem() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    SelectLineItem.prototype.onChangeItem = function (e) {\r\n        this.props.store.updateLineItem(this.props.row, \"itemId\", e.target.value);\r\n    };\r\n    SelectLineItem.prototype.render = function () {\r\n        var options = [];\r\n        options.push(React.createElement(\"option\", {key: \"1\", value: \"1\"}, \" Item #1 \"));\r\n        options.push(React.createElement(\"option\", {key: \"2\", value: \"2\"}, \" Item #2 \"));\r\n        options.push(React.createElement(\"option\", {key: \"3\", value: \"3\"}, \" Item #3 \"));\r\n        return (React.createElement(\"select\", {defaultValue: this.props.selected, id: this.props.controlId, onChange: this.onChangeItem.bind(this)}, options));\r\n    };\r\n    return SelectLineItem;\r\n}(React.Component));\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = SelectLineItem;\r\n//# sourceMappingURL=SelectLineItem.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wwwroot/libs/tsxbuild/Shared/Components/SelectLineItem.js\n ** module id = 172\n ** module chunks = 1 2 3 4 5\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar React = require(\"react\");\r\nvar SelectLineMeasurement = (function (_super) {\r\n    __extends(SelectLineMeasurement, _super);\r\n    function SelectLineMeasurement() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    SelectLineMeasurement.prototype.onChangeMeasurement = function (e) {\r\n        this.props.store.updateLineItem(this.props.row, \"measurementId\", e.target.value);\r\n    };\r\n    SelectLineMeasurement.prototype.render = function () {\r\n        var options = [];\r\n        options.push(React.createElement(\"option\", {key: \"1\", value: \"1\"}, \" Measurement #1 \"));\r\n        options.push(React.createElement(\"option\", {key: \"2\", value: \"2\"}, \" Measurement #2 \"));\r\n        options.push(React.createElement(\"option\", {key: \"3\", value: \"3\"}, \" Measurement #3 \"));\r\n        return (React.createElement(\"select\", {defaultValue: this.props.selected, id: this.props.controlId, onChange: this.onChangeMeasurement.bind(this)}, options));\r\n    };\r\n    return SelectLineMeasurement;\r\n}(React.Component));\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = SelectLineMeasurement;\r\n//# sourceMappingURL=SelectLineMeasurement.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wwwroot/libs/tsxbuild/Shared/Components/SelectLineMeasurement.js\n ** module id = 173\n ** module chunks = 1 2 3 4 5\n **/","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar React = require(\"react\");\r\nvar SelectCustomer = (function (_super) {\r\n    __extends(SelectCustomer, _super);\r\n    function SelectCustomer() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    SelectCustomer.prototype.onChangeCustomer = function (e) {\r\n        this.props.store.changedCustomer(e.target.value);\r\n    };\r\n    SelectCustomer.prototype.render = function () {\r\n        var options = [];\r\n        options.push(React.createElement(\"option\", {key: \"1\", value: \"1\"}, \" Customer #1 \"));\r\n        options.push(React.createElement(\"option\", {key: \"2\", value: \"2\"}, \" Customer #2 \"));\r\n        options.push(React.createElement(\"option\", {key: \"3\", value: \"3\"}, \" Customer #3 \"));\r\n        return (React.createElement(\"select\", {id: \"optCustomer\", onChange: this.onChangeCustomer.bind(this)}, options));\r\n    };\r\n    return SelectCustomer;\r\n}(React.Component));\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = SelectCustomer;\r\n//# sourceMappingURL=SelectCustomer.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wwwroot/libs/tsxbuild/Shared/Components/SelectCustomer.js\n ** module id = 180\n ** module chunks = 3 4 5\n **/","\"use strict\";\r\nvar mobx_1 = require('mobx');\r\nvar SalesQuotation_1 = require('./SalesQuotation');\r\nvar SalesQuotationLine_1 = require('./SalesQuotationLine');\r\nvar SalesQuotationStore = (function () {\r\n    function SalesQuotationStore() {\r\n        this.salesQuotation = new SalesQuotation_1.default();\r\n        mobx_1.extendObservable(this.salesQuotation, {\r\n            customerId: this.salesQuotation.customerId,\r\n            quotationDate: this.salesQuotation.quotationDate,\r\n            paymentTermId: this.salesQuotation.paymentTermId,\r\n            referenceNo: this.salesQuotation.referenceNo,\r\n            salesQuotationLines: []\r\n        });\r\n    }\r\n    SalesQuotationStore.prototype.changedCustomer = function (custId) {\r\n        this.salesQuotation.customerId = custId;\r\n    };\r\n    SalesQuotationStore.prototype.changedQuotationDate = function (date) {\r\n        this.salesQuotation.quotationDate = date;\r\n    };\r\n    SalesQuotationStore.prototype.addLineItem = function (itemId, measurementId, quantity, amount, discount) {\r\n        var newLineItem = new SalesQuotationLine_1.default(itemId, measurementId, quantity, amount, discount);\r\n        this.salesQuotation.salesQuotationLines.push(mobx_1.extendObservable(newLineItem, newLineItem));\r\n    };\r\n    SalesQuotationStore.prototype.removeLineItem = function (row) {\r\n        this.salesQuotation.salesQuotationLines.splice(row, 1);\r\n    };\r\n    SalesQuotationStore.prototype.updateLineItem = function (row, targetProperty, value) {\r\n        if (this.salesQuotation.salesQuotationLines.length > 0)\r\n            this.salesQuotation.salesQuotationLines[row][targetProperty] = value;\r\n    };\r\n    SalesQuotationStore.prototype.grandTotal = function () {\r\n        var sum = 0;\r\n        for (var i = 0; i < this.salesQuotation.salesQuotationLines.length; i++) {\r\n            var lineSum = this.salesQuotation.salesQuotationLines[i].quantity * this.salesQuotation.salesQuotationLines[i].amount;\r\n            sum = sum + lineSum;\r\n        }\r\n        return sum;\r\n    };\r\n    SalesQuotationStore.prototype.lineTotal = function (row) {\r\n        var lineSum = this.salesQuotation.salesQuotationLines[row].quantity * this.salesQuotation.salesQuotationLines[row].amount;\r\n        ;\r\n        return lineSum;\r\n    };\r\n    return SalesQuotationStore;\r\n}());\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = SalesQuotationStore;\r\n//# sourceMappingURL=SalesQuotationStore.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wwwroot/libs/tsxbuild/Shared/Stores/Quotations/SalesQuotationStore.js\n ** module id = 181\n ** module chunks = 3\n **/","\"use strict\";\r\nvar SalesQuotation = (function () {\r\n    function SalesQuotation() {\r\n        this.salesQuotationLines = [];\r\n    }\r\n    return SalesQuotation;\r\n}());\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = SalesQuotation;\r\n//# sourceMappingURL=SalesQuotation.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wwwroot/libs/tsxbuild/Shared/Stores/Quotations/SalesQuotation.js\n ** module id = 182\n ** module chunks = 3\n **/","\"use strict\";\r\nvar SalesQuotationLine = (function () {\r\n    function SalesQuotationLine(itemId, measurementId, quantity, amount, discount) {\r\n        this.itemId = itemId;\r\n        this.measurementId = measurementId;\r\n        this.quantity = quantity;\r\n        this.amount = amount;\r\n        this.discount = discount;\r\n    }\r\n    return SalesQuotationLine;\r\n}());\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = SalesQuotationLine;\r\n//# sourceMappingURL=SalesQuotationLine.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wwwroot/libs/tsxbuild/Shared/Stores/Quotations/SalesQuotationLine.js\n ** module id = 183\n ** module chunks = 3\n **/"],"sourceRoot":""}